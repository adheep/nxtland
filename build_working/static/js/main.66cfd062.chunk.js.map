{"version":3,"sources":["assets/images/livfair.png","components/layout/MainNavbar/NavbarSearch.tsx","config/configs.ts","components/layout/MainNavbar/NavbarNav/Notifications.tsx","components/layout/MainNavbar/NavbarNav/UserActions.tsx","components/layout/MainNavbar/NavbarNav/NavbarNav.tsx","resources/flux/constants.tsx","resources/flux/dispatcher.tsx","resources/flux/store.tsx","resources/data/sidebar-nav-items.tsx","components/layout/MainNavbar/NavbarToggle.tsx","components/layout/MainNavbar/MainNavbar.tsx","components/layout/MainSidebar/SidebarMainNavbar.tsx","components/layout/MainSidebar/SidebarSearch.tsx","components/layout/MainSidebar/SidebarNavItem.tsx","components/layout/MainSidebar/SidebarNavItems.tsx","components/layout/MainSidebar/MainSidebar.tsx","layouts/Default.tsx","layouts/Login.tsx","layouts/LeftNavLayout.tsx","redux/actions/types.tsx","utils/leoAxios.tsx","components/layout/Global/Global.tsx","redux/actions/login/loginAction.tsx","components/exhiTemplate/Navbar.tsx","components/exhiTemplate/ConnectWalletButton.tsx","components/exhiTemplate/nlc_land_logo.png","components/exhiTemplate/Home.tsx","components/exhiTemplate/Login.tsx","redux/actions/register/registerAction.tsx","components/exhiTemplate/Register.tsx","components/exhiTemplate/EventNavbar.tsx","redux/actions/systemCheck/systemCheckAction.tsx","components/exhiTemplate/SystemCheck.tsx","components/exhiTemplate/Calibaration.tsx","components/exhiTemplate/EventHome.tsx","components/exhiTemplate/NLC_Empty.jpg","components/exhiTemplate/EventWalletDetails.tsx","components/exhiTemplate/Event.tsx","components/exhiTemplate/EventWebGL.tsx","components/dashboard/Dashboard.tsx","redux/actions/dashboard/dashboardActions.tsx","components/exhiTemplate/Feedback.tsx","components/exhiTemplate/EventFeedback.tsx","redux/actions/login/ResetAction.tsx","components/exhiTemplate/ResetPassword.tsx","components/dashboard/EventConfigForm.js","components/dashboard/ExhibitorConfigForm.js","components/dashboard/EventConfiguration.tsx","components/dashboard/AdminDashboard.tsx","components/exhiTemplate/EventChat.tsx","routes.tsx","withTracker.tsx","redux/reducers/login/loginReducer.tsx","redux/reducers/language/languageReducer.tsx","redux/reducers/profileUpdateReducer/profileUpdateReducer.tsx","redux/reducers/changePasswordReducer/changePasswordReducer.tsx","redux/reducers/metadata/metadataReducer.tsx","redux/reducers/register/registerReducer.tsx","redux/reducers/metadata/systemCheckReducer.tsx","redux/reducers/dashboard/dashboardReducer.tsx","redux/reducers/login/resetReducer.tsx","redux/reducers/index.tsx","store.tsx","App.tsx","serviceWorker.tsx","index.tsx"],"names":["className","seamless","type","placeholder","config","environment","process","REACT_APP_NODE_ENV","companyName","secretKey","REACT_APP_SECRET_KEY","appBaseName","appGAID","REACT_APP_GAID","captcha","apiRootPath","REACT_APP_API_ROOT_PATH","authenticationURL","registerURL","resetURL","getChatData","getMetaDataURL","websocketRootPath","REACT_APP_WEBSOCKET_ROOT_PATH","eventConfigurationBaseURL","websocketURL","changePasswordURL","updateUserURL","loadDashboard","loadAdminDashboard","validateOTP","resetPassword","feedbackUrl","loginEvent","logoutEvent","getEvents","getExhibitorsForEvent","Notifications","props","state","visible","count","notifications","icon","category","message","toggleNotifications","bind","this","setState","data","JSON","parse","dropdownItems","map","notification","style","color","undefined","onClick","pill","theme","length","open","url","onMessage","handleData","React","Component","UserActions","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","fontSize","loginData","firstName","DropdownMenu","right","small","Link","to","href","connect","navbar","Dispatcher","_store","menuVisible","navItems","title","htmlBefore","registerToActions","toggleSidebar","register","actionType","payload","Constants","emit","callback","on","removeListener","EventEmitter","NavbarToggle","handleClick","dispatch","MainNavbar","layout","stickyTop","classes","classNames","NavbarSearch","NavbarNav","defaultProps","navbarStyle","SidebarMainNavbar","handleToggleSidebar","leftNav","hideLogoText","lineHeight","id","maxWidth","marginTop","src","require","alt","display","minHeight","SidebarNavItem","item","RouteNavLink","dangerouslySetInnerHTML","__html","htmlAfter","SidebarNavItems","items","idx","leftNavStyle","MainSidebar","sidebarNavItems","Store","getSidebarItems","sidebarNavVisibile","onChange","addChangeListener","height","boxShadow","removeChangeListener","getMenuState","lg","size","md","SidebarSearch","DefaultLayout","children","noNavbar","noFooter","fluid","offset","sm","LoginLayout","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","LeftNavLayout","LOGIN","LOGOUT","RESET_EVENT","RESET_FAILED","RESET_SUCCESS","OTP_RESET_SUCCESS","OTP_RESET_FAILED","RESET_VALUES","SET_WALLET_DETAILS","CHANGE_PASSWORD","LANGUAGE","UPDATE_PROFILE","META_DATA","SYSCHECK_PASSED","SYSCHECK_FAILED","SYSCHECK_CHAT","SYSCHECK_INIT","WEBGL_LOGOUT","REGISTER_USER","REGISTRATION_FAILED","REGISTRATION_SUCCESS","LOAD_DASHBOARD","OTP_VALIDATION_SUCCESS","OTP_VALIDATION_FAILURE","LOAD_EVENTS","CONFIGURE_EVENT","leoAxios","interceptors","request","use","headers","token","localStorage","getItem","error","Promise","reject","Global","alertContent","closable","status","history","createBrowserHistory","cryptoJs","jwtDecode","logoutAction","i","key","startsWith","removeItem","sessionStorage","clear","isLoggedIn","redirect","loginAction","values","userId","userName","password","address","Name","axios","post","then","res","success","setItem","get","profileRes","profileUrl","decoded","firstname","middlename","lastname","username","userDetail","emailId","roleName","walletAddress","loginErrorMessage","getMetaData","options","hostname","window","location","resp","AES","decrypt","toString","enc","Utf8","decryptedData","other_metadata","Navbar","resetEvent","logout","width","justifyContent","backgroundColor","padding","marginBottom","NavbarForm","Form","create","name","isMetaMaskInstalled","Boolean","ethereum","readAddress","method","accounts","console","log","ConnectWalletButton","useState","selectedAddress","setAddress","connectWallet","useDispatch","useEffect","backgroundImage","backgroundSize","backgroundRepeat","backgroundPositionX","backgroundPositionY","border","fontWeight","substring","Home","renderRedirect","Redirect","addressChanged","captchaError","language","captchaValue","toastLoaded","alignContent","marginLeft","landLogo","target","LoginuserForm","metaData","recaptchaRef","createRef","Login","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","value","toast","resetStatus","otpValidated","progress","getFieldDecorator","onSubmit","Item","rules","required","max","min","ref","sitekey","textAlign","htmlType","registerAction","isRegistered","Register","Select","Option","customScoreValidator","setFields","score","errors","Error","returnNumber","number","registerStatus","formValue","file","fileError","files","parseInt","replace","initialValues","gender","parentName","mobileNumber","confirmPassword","board","cutOff","scholarshipEligibility","desiredCourse","decidedCourse","decidedCollege","needScholarship","fatherIncome","purposeOfVisit","studentName","visitorType","userType","eventName","referredCode","validate","requiredFields","test","email","f","setSubmitting","resultString","base64","split","touched","handleChange","handleBlur","isSubmitting","onBlur","label","maxLength","pattern","multiple","onDone","getFiles","disabled","checkFileUpload","registrationErrorMessage","otp","sessionId","otpSessionId","resetForm","otpValidationMessage","registerUserForm","registration","EventNavbar","showDisplayName","walletDetails","endsWith","walletObj","flex","flexFlow","initSysCheck","systemCheck","browserInfo","SystemCheck","mobCheck","a","check","navigator","userAgent","vendor","substr","checkComplete","completeSysCheck","os","osMessage","browser","browserMessage","mobile","webgl","bandwidth","systemData","osValue","browserValue","webglValue","bandwidthValue","includes","setTimeout","role","version","Calibaration","CalibarationForm","EventHome","EventHomeForm","EventWalletDetails","showAvatarSelection","firstPart","lastPart","stringify","setWalletDetails","handleTokenSelect","tokenId","selectedToken","spawnIndex","savedWalletDetails","handleDisplayChange","displayName","handleCompanyChange","handleDesignationChange","designation","createTokenElement","collection","description","permalink","image_preview_url","token_id","section","slug","img_url","getTokens","getToken","tok","ownerAddress","fetch","Accept","response","json","assets","forEach","attributes","push","tokens","catch","Card","CardActionArea","CardMedia","image","CardContent","CardActions","gap","paddingTop","zIndex","emptyToken","EventWalletDetailsForm","Event","eventGLRedirect","isValidated","renderPage","unityContent","UnityContent","userObject","publishSocket","listenSocket","EventWebGL","tutorialVideo","startPublishWS","WebSocket","startWS","onmessage","event","from","messageList","author","text","msg","onclose","isOpen","chatConnected","chatUrl","exhibitorId","onopen","loadData","showWebgl","canvas","document","getElementsByTagName","eventRedirect","requestFullscreen","element","mozRequestFullScreen","webkitRequestFullScreen","orientationCheck","fullscreenEnabled","orientationChanged","documentElement","webglLoaded","dataSent","screenObj","webglLogout","eventID","userID","exhibitorName","progression","maskedWalletAddress","send","addEventListener","ev","d","Date","emoji","timestamp","getHours","getMinutes","getSeconds","hasOwnProperty","agentProfile","teamName","imageUrl","onMessageWasSent","_onMessageWasSent","showEmoji","borderRadius","EventWebGLForm","Dashboard","dashboard","summary","card","margin","TextArea","Input","Feedback","submitFeedback","feedback","feedbackText","rating","ratingChanged","newRating","returnValue","activeColor","rows","FacebookShareButton","quote","toUpperCase","FacebookIcon","WhatsappShareButton","WhatsappIcon","TwitterShareButton","TwitterIcon","FeedbackForm","EventFeedback","EventFeedbackForm","resetValues","resetAction","isResetPassword","resetErrorMessage","errorMessage","otpErrorMessage","ResetPassword","resetPasswordForm","renderField","input","meta","renderMedia","fields","submitFailed","listStyle","media","index","remove","Field","component","renderSpotlight","eventForm","reduxForm","enableReinitialize","pristine","reset","submitting","FieldArray","renderAmenties","renderBooths","exhibitorForm","EventConfiguration","handleExhinitorSubmit","body","configureEvent","eventId","events","selectedEvent","loadEvents","cursor","exhibitors","ex","ExhibitorConfigForm","_id","dispath","filter","x","AdminDashboard","alert","path","exact","MainHome","layoyt","GoogleAnalytics","initialize","withTracker","WrappedComponent","trackPage","page","set","pageview","BASENAME","HOC","pathname","search","prevProps","currentPage","nextPage","initialState","Email","accessToken","getInitialState","getProfileUrl","resolve","Authorization","updateProfile","passwordUpdate","combineReducers","languageDatum","action","userProfile","changePassword","userMessage","reduxFormReducer","middleware","thunk","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","rootReducer","basename","routes","route","Route","match","ReactDOM","render","getElementById","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.66cfd062.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/livfair.5004a7d6.png\";","import React from \"react\";\nimport {\n  Form,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormInput\n} from \"shards-react\";\n\nexport default () => (\n  // <Form className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\" style={{justifyContent: 'flex-end'}}>\n  <Form className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\">\n    <InputGroup seamless className=\"ml-3\">\n      <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n      </InputGroupAddon>\n      <FormInput\n        className=\"navbar-search\"\n        placeholder=\"Search for something...\"\n      />\n    </InputGroup>\n  </Form>\n);\n","\nexport const config = {\n    environment: process.env.REACT_APP_NODE_ENV,\n    companyName: 'Techfully',\n    secretKey:process.env.REACT_APP_SECRET_KEY,\n    appBaseName:process.env.REACT_APP_BASENAME,\n    appGAID:process.env.REACT_APP_GAID,\n    captcha:\"google\",\n    apiRootPath: process.env.REACT_APP_API_ROOT_PATH ||\"https://api.techfully.io\",\n    authenticationURL:\"/v1/authenticate\",\n    registerURL:'/v3/registerUser',\n    resetURL:'/v1/sendOtp',\n    getChatData: '/v1/chatData',\n    getMetaDataURL:\"/init/getMetaData\",\n    websocketRootPath:process.env.REACT_APP_WEBSOCKET_ROOT_PATH || \"ws://localhost:8000/\",\n    eventConfigurationBaseURL:'http://localhost:4100/',\n    websocketURL:\"ws://localhost:8000/api/ws/notification\",\n    changePasswordURL:\"/v1/updatePassword\",\n    updateUserURL:\"/v1/updateUser/\",\n    loadDashboard:'/v1/exhibitor/summary',\n    loadAdminDashboard:'/v1/admin/summary',\n    validateOTP:'/v3/validateOtp',\n    resetPassword: '/v1/resetPassword',\n    feedbackUrl:'/v1/feedback',\n    loginEvent:'/v1/logEvent',\n    logoutEvent:'/v1/logout',\n    getEvents:'getEvents',\n    getExhibitorsForEvent:'getExhibitorsForEvent'\n};\n","import React from \"react\";\nimport { NavItem, NavLink, Badge, Collapse, DropdownItem } from \"shards-react\";\nimport Websocket from 'react-websocket'\nimport {config} from './../../../../config/configs'\n\ntype notificationTemplate = {\n  icon: string,\n  category: string,\n  message: string,\n  type: string\n}\n\ntype MyState = {\n  visible: boolean,\n  count: any,\n  notifications: Array<notificationTemplate>\n};\n\nexport default class Notifications extends React.Component<{},MyState> {\n  constructor(props:any) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      count: 0,\n      notifications: [\n        {\n          icon: '&#xE6E1;',\n          category: 'General',\n          type: 'INFO',\n          message: 'Please keep your credentials safe, do not share it with anyone'\n        }\n      ]\n    };\n\n    this.toggleNotifications = this.toggleNotifications.bind(this);\n  }\n\n  toggleNotifications() {\n    this.setState({visible: (this.state.visible?false:true)})\n  }\n\n  handleData(data) {\n    let result = JSON.parse(data);\n    let notifications = [result, ...this.state.notifications];\n    this.setState({notifications});\n  }\n\n  render() {\n    let dropdownItems = this.state.notifications.map(notification => {\n      let style = {};\n\n      if(notification.type===\"ERROR\") {\n        style = {color: 'red'}\n      } else if(notification.type===\"WARN\") {\n        style = {color: '#ffc107'}\n      }\n      return (\n        <DropdownItem>\n            <div className=\"notification__icon-wrapper\">\n              <div className=\"notification__icon\">\n                  {notification.type==='ERROR'?(<i className=\"material-icons\"> &#xe001;</i>):(undefined)}\n                  {notification.type==='WARN'?(<i className=\"material-icons\"> &#xe002;</i>):(undefined)}\n                  {notification.type==='INFO'?(<i className=\"material-icons\"> &#xe7f4;</i>):(undefined)}\n              </div>\n            </div>\n            <div className=\"notification__content\">\n              {notification.category!==''?\n              (<span className=\"notification__category\">{notification.category}</span>):undefined}\n              <p style={style}>\n                {notification.message}\n              </p>\n            </div>\n          </DropdownItem>\n      );\n    });\n\n    return (\n      <NavItem className=\"border-right dropdown notifications\">\n        <NavLink\n          className=\"nav-link-icon text-center\"\n          onClick={this.toggleNotifications}\n        >\n          <div className=\"nav-link-icon__wrapper\">\n            <i className=\"material-icons\">&#xE7F4;</i>\n            <Badge pill theme=\"danger\">\n              {this.state.notifications.length}\n            </Badge>\n          </div>\n        </NavLink>\n        <Collapse\n          open={this.state.visible}\n          className=\"dropdown-menu dropdown-menu-small\"\n        >\n          {dropdownItems}\n          <DropdownItem className=\"notification__all text-center\">\n            View all Notifications\n          </DropdownItem>\n        </Collapse>\n\n        <Websocket url={config.websocketURL} onMessage={this.handleData.bind(this)}/>\n\n      </NavItem>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink\n} from \"shards-react\";\nimport {connect} from 'react-redux';\n\ntype MyProps = { loginData: {\n  firstName: string\n}};\ntype MyState = { visible: boolean };\nclass UserActions extends React.Component<MyProps,MyState> {\n  constructor(props:any) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.toggleUserActions = this.toggleUserActions.bind(this);\n  }\n\n  toggleUserActions() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  render() {\n    return (\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <i className=\"material-icons\" style={{fontSize: '2rem'}}>account_circle</i>{\" \"}\n          <span className=\"d-none d-md-inline-block\">{this.props.loginData.firstName}</span>\n        </DropdownToggle>\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\n          <DropdownItem tag={Link} to=\"/editprofile\">\n            <i className=\"material-icons\">&#xE8B8;</i> Edit Profile\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"/changepassword\">\n            <i className=\"material-icons\">&#xE7FD;</i>Change Password\n          </DropdownItem>\n          {/* <DropdownItem tag={Link} to=\"file-manager-list\">\n            <i className=\"material-icons\">&#xE2C7;</i> Files\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"transaction-history\">\n            <i className=\"material-icons\">&#xE896;</i> Transactions\n          </DropdownItem>\n          <DropdownItem divider /> */}\n          <DropdownItem tag='a' href=\"/login\" className=\"text-danger\">\n            <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\nconst mapStateToProps = (state:any) => ({loginData: state.loginData});\nexport default connect(mapStateToProps)(UserActions);\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\n\nexport default () => (\n  <Nav navbar className=\"border-left flex-row\">\n    <Notifications />\n    <UserActions />\n  </Nav>\n);\n","export default {\n  CHANGE: \"CHANGE\",\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","import { EventEmitter } from \"events\";\n\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\n\nlet _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems()\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n\n    Dispatcher.register(this.registerToActions.bind(this));\n  }\n\n  registerToActions({ actionType, payload }:{actionType:any, payload:any}) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  addChangeListener(callback:any) {\n    this.on(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback:any) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n}\n\nexport default new Store();\n","export default function() {\n  return [\n    {\n      title: \"Get Quote\",\n      htmlBefore: '<i class=\"material-icons\">note_add</i>',\n      to: \"/home\",\n    },\n    {\n      title: \"Find Policies\",\n      htmlBefore: '<i class=\"material-icons\">table_chart</i>',\n      to: \"/tables\",\n    }\n  ];\n}\n","import React from \"react\";\n\nimport { Dispatcher, Constants } from \"../../../resources/flux\";\n\nclass NavbarToggle extends React.Component {\n  constructor(props:any) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"nav\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\n          <i className=\"material-icons\">&#xE5D2;</i>\n        </a>\n      </nav>\n    )\n  }\n}\n\nexport default NavbarToggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Container, Navbar } from \"shards-react\";\n\nimport NavbarSearch from \"./NavbarSearch\";\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\nimport NavbarToggle from \"./NavbarToggle\";\nimport NavbarMenu from \"./NavbarMenu\";\n\nconst MainNavbar = ({ layout, stickyTop }:{layout:any,stickyTop:any}) => {\n  const classes = classNames(\n    \"main-navbar\",\n    \"bg-white\",\n    stickyTop && \"sticky-top\"\n  );\n\n  return (\n    <div className={classes}>\n      <Container className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          {/* <NavbarMenu/> */}\n          <NavbarSearch />\n          <NavbarNav />\n          <NavbarToggle />\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nMainNavbar.propTypes = {\n  /**\n   * The layout type where the MainNavbar is used.\n   */\n  layout: PropTypes.string,\n  /**\n   * Whether the main navbar is sticky to the top, or not.\n   */\n  stickyTop: PropTypes.bool\n};\n\nMainNavbar.defaultProps = {\n  stickyTop: true\n};\n\nexport default MainNavbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nimport { Dispatcher, Constants } from \"../../../resources/flux\";\n\nlet navbarStyle:any;\n\ntype MyProps = {\n  leftNav: boolean,\n  hideLogoText: boolean\n};\ntype MyState = {\n  menuVisible: boolean,\n  sidebarNavItems: Array<any>,\n  sidebarNavVisibile: boolean\n};\nclass SidebarMainNavbar extends React.Component<MyProps,MyState> {\n  constructor(props:any) {\n    super(props);\n\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n  }\n\n  handleToggleSidebar() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  componentWillMount() {\n    if(this.props.leftNav) {\n      navbarStyle = \"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\";\n    } else {\n      navbarStyle = \"align-items-stretch bg-white flex-md-nowrap p-0\";\n    }\n  }\n\n  render() {\n    const { hideLogoText } = this.props;\n    return (\n      <div className=\"main-navbar\">\n        <Navbar\n          className={navbarStyle}\n          type=\"light\"\n        >\n          <NavbarBrand\n            className=\"w-100 mr-0\"\n            href=\"#\"\n            style={{ lineHeight: \"25px\" }}\n          >\n            <div className=\"d-table m-auto\">\n              <img\n                id=\"main-logo\"\n                className=\"d-inline-block align-top mr-1\"\n                style={{ maxWidth: \"150px\", marginTop: '-25px'}}\n                src={require(\"../.././../assets/images/livfair.png\")}\n                alt=\"LivFair\"\n              />\n            </div>\n          </NavbarBrand>\n          {/* eslint-disable-next-line */}\n          <a\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n            onClick={this.handleToggleSidebar}\n          >\n            <i className=\"material-icons\">&#xE5C4;</i>\n          </a>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default SidebarMainNavbar;\n","import React from \"react\";\nimport {\n  Form,\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText\n} from \"shards-react\";\n\nexport default () => (\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\n    <InputGroup seamless className=\"ml-3\">\n      <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n        <FormInput\n          className=\"navbar-search\"\n          placeholder=\"Search for something...\"\n          aria-label=\"Search\"\n        />\n      </InputGroupAddon>\n    </InputGroup>\n  </Form>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport { NavItem, NavLink } from \"shards-react\";\n\nconst SidebarNavItem = ({item}:{item:any}) => (\n  <NavItem>\n    <NavLink tag={RouteNavLink} to={item.to}>\n      {item.htmlBefore && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n        />\n      )}\n      {item.title && <span>{item.title}</span>}\n      {item.htmlAfter && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n        />\n      )}\n    </NavLink>\n  </NavItem>\n);\n\nSidebarNavItem.propTypes = {\n  /**\n   * The item object.\n   */\n  item: PropTypes.object\n};\n\nexport default SidebarNavItem;\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\ntype MyProps = {};\ntype MyState = {\n  navItems: Array<\n    {\n      title: string,\n      htmlBefore: string,\n      to: string,\n\n    }\n  >\n};\nclass SidebarNavItems extends React.Component<MyProps, MyState> {\n  constructor(props:any) {\n    super(props)\n\n    this.state = {\n      navItems: [\n        {\n          title: \"EduExpo 2020\",\n          htmlBefore: '<i class=\"material-icons\">table_chart</i>',\n          to: \"/uiux\",\n        }\n      ]\n    };\n  }\n\n\n  render() {\n    const { navItems: items } = this.state;\n    return (\n      <div className=\"nav-wrapper\">\n        <Nav className=\"nav--no-borders flex-column\">\n          {items.map((item:any, idx:any) => (\n            <SidebarNavItem key={idx} item={item} />\n          ))}\n        </Nav>\n      </div>\n    )\n  }\n}\n\nexport default SidebarNavItems;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarSearch from \"./SidebarSearch\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store } from \"../../../resources/flux\";\n\nlet leftNavStyle = {};\n\ntype MyProps = {\n  leftNav: boolean,\n  hideLogoText: boolean\n};\ntype MyState = {\n  menuVisible: boolean,\n  sidebarNavItems: Array<any>,\n  sidebarNavVisibile: boolean\n};\n\nclass MainSidebar extends React.Component<MyProps,MyState> {\n  constructor(props:any) {\n    super(props);\n\n    this.state = {\n      menuVisible: false,\n      sidebarNavItems: Store.getSidebarItems(),\n      sidebarNavVisibile: false\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.addChangeListener(this.onChange);\n    this.setState({\n      sidebarNavVisibile: this.props.leftNav\n    })\n    if(!this.props.leftNav) {\n      leftNavStyle = {\n        display: \"block\",\n        height: \"60px\",\n        boxShadow: \"0 0.125rem 0.625rem rgba(90,97,105,.12)\"\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    Store.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col\n        tag=\"aside\"\n        className={classes}\n        lg={{ size: 2 }}\n        md={{ size: 3 }}\n        style={leftNavStyle}\n      >\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} leftNav={this.props.leftNav}/>\n        <SidebarSearch />\n        {this.props.leftNav === true? <SidebarNavItems />: null}\n      </Col>\n    );\n  }\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/layout/MainSidebar/MainSidebar\";\n\nconst DefaultLayout = ({ children, noNavbar, noFooter }:{children:any, noNavbar:any, noFooter:any}) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar leftNav={false} hideLogoText={false} />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n      </Col>\n    </Row>\n  </Container>\n);\n\nDefaultLayout.propTypes = {\n  /**\n   * Whether to display the navbar, or not.\n   */\n  noNavbar: PropTypes.bool,\n  /**\n   * Whether to display the footer, or not.\n   */\n  noFooter: PropTypes.bool\n};\n\nDefaultLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: false\n};\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container} from \"shards-react\";\nimport {ToastContainer} from \"react-toastify\"\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst LoginLayout = ({ children, noNavbar, noFooter }:{children:any, noNavbar:any, noFooter:any}) => (\n  <Container fluid>\n        {children}\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          />\n          {/* Same as */}\n        <ToastContainer />\n  </Container>\n);\n\nLoginLayout.propTypes = {\n  /**\n   * Whether to display the navbar, or not.\n   */\n  noNavbar: PropTypes.bool,\n  /**\n   * Whether to display the footer, or not.\n   */\n  noFooter: PropTypes.bool\n};\n\nLoginLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: false\n};\n\nexport default LoginLayout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/layout/MainSidebar/MainSidebar\";\n\nconst LeftNavLayout = ({ children, noNavbar, noFooter }:{children:any, noNavbar:any, noFooter:any}) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar leftNav={true} hideLogoText={false}/>\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n      </Col>\n    </Row>\n  </Container>\n);\n\nLeftNavLayout.propTypes = {\n  /**\n   * Whether to display the navbar, or not.\n   */\n  noNavbar: PropTypes.bool,\n  /**\n   * Whether to display the footer, or not.\n   */\n  noFooter: PropTypes.bool\n};\n\nLeftNavLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: false\n};\n\nexport default LeftNavLayout;\n","export const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const FETCH_POSTS = \"FETCH_POSTS\";\nexport const GET_CONVERSION_RATE = \"GET_CONVERSION_RATE\";\nexport const GET_USD_RATE = \"GET_USD_RATE\";\nexport const TOGGLE_PANEL = \"TOGGLE_PANEL\";\nexport const GET_EUR_RATE = \"GET_EUR_RATE\";\nexport const GET_MODEL = \"GET_MODEL\";\nexport const VIN_VALIDATE = \"VIN_VALIDATE\";\nexport const SAVE_CONTRACT = \"SAVE_CONTRACT\";\nexport const DEPLOY_CONTRACT = \"DEPLOY_CONTRACT\";\nexport const RESET_EVENT=\"RESET_EVENT\";\nexport const RESET_FAILED =\"RESET_FAILED\";\nexport const RESET_SUCCESS = \"RESET_SUCCESS\";\nexport const OTP_RESET_SUCCESS = \"OTP_RESET_SUCCESS\";\nexport const OTP_RESET_FAILED = \"OTP_RESET_FAILED\";\nexport const RESET_VALUES = \"RESET_VALUES\";\nexport const SET_WALLET_DETAILS = \"SET_WALLET_DETAILS\";\n// change password\nexport const CHANGE_PASSWORD = \"CHANGE_PASSWORD\";\n//language\nexport const LANGUAGE = \"LANGUAGE\";\n//profile update\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const META_DATA = \"META_DATA\";\nexport const SYSCHECK_PASSED = \"SYSCHECK_PASSED\";\nexport const SYSCHECK_FAILED = \"SYSCHECK_FAILED\";\nexport const SYSCHECK_CHAT = \"SYSCHECK_CHAT\";\nexport const SYSCHECK_INIT = \"SYSCHECK_FAILED\";\nexport const WEBGL_LOGOUT = \"WEBGL_LOGOUT\";\n//Register\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTRATION_FAILED = 'REGISTRATION_FAILED';\nexport const REGISTRATION_SUCCESS = 'REGISTRATION_SUCCESS';\nexport const LOAD_DASHBOARD = 'LOAD_DASHBOARD';\nexport const OTP_VALIDATION_SUCCESS ='OTP_VALIDATION_SUCCESS';\nexport const OTP_VALIDATION_FAILURE = 'OTP_VALIDATION_FAILURE';\nexport const LOAD_EVENTS = 'LOAD_EVENTS'\nexport const CONFIGURE_EVENT = 'CONFIGURE_EVENT'\n","import leoAxios from 'axios'\n\nleoAxios.interceptors.request.use(config => {\n\n    config.headers.token = localStorage.getItem(\"token\");\n    return config;\n}, error => {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n\nexport default leoAxios;\n","import { createBrowserHistory } from 'history';\n\nexport default class Global {\n    static history = createBrowserHistory();\n\n    static alertContent = {\n        closable: true,\n        message: \"\",\n        status: 'info'\n    }\n\n    static clearAlert() {\n        Global.alertContent = {\n            closable: true,\n            message: \"\",\n            status: 'info'\n        }\n    }\n\n    static isCustomerAuthenticated() {\n        if (localStorage.getItem('token') &&\n            localStorage.getItem('token') !== null &&\n            localStorage.getItem('token') !== undefined &&\n            localStorage.getItem('token') !== '') {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n\n}\n","import {\n  LOGIN,\n  LOGOUT,\n  CHANGE_PASSWORD,\n  META_DATA,\n  SYSCHECK_PASSED,\n  SYSCHECK_FAILED,\n  RESET_EVENT,\n  RESET_FAILED,\n  RESET_SUCCESS,\n  OTP_VALIDATION_SUCCESS,\n  OTP_VALIDATION_FAILURE,\n  SET_WALLET_DETAILS\n} from \"../types\";\nimport fetch from \"../../../utils/leoFetch\";\nimport axios from \"../../../utils/leoAxios\";\nimport history from \"../../../history\";\n// import Global from '../../../../src/components/layout/Global/Global.js';\nimport Global from \"../../../components/layout/Global/Global\";\nimport message from \"../../../components/messages/message.json\";\nimport { config } from \"../../../config/configs\";\n\nlet cryptoJs = require(\"crypto-js\");\nlet jwtDecode = require(\"jwt-decode\");\n\nexport const logoutAction = () => (dispatch: any) => {\n  let loginData = {\n    isLoggedIn: false,\n    redirect: false,\n    token: null,\n  };\n  for (var i = 0; i < localStorage.length; i++){\n    var key = localStorage.key(i);\n\n    if (!key.startsWith(\"wallet-\")) {\n        localStorage.removeItem(key);\n    }\n  }\n  sessionStorage.clear();\n  dispatch({\n    payload: loginData,\n    type: LOGOUT,\n  });\n};\n\nexport const loginAction = (values: any) => (dispatch: any) => {\n  let payload = {\n    userId: values.userName,\n    password: values.password,\n    address: values.address\n  };\n\n  let loginData = {\n    Name: null,\n    userName: null,\n    isLoggedIn: false,\n    password: null, // for reference\n    redirect: false,\n    token: null,\n  };\n\n  axios\n    .post(config.apiRootPath + config.authenticationURL, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((res) => {\n      if(res && res.data.success) {\n        var token = res.data.token;\n        sessionStorage.setItem(\"accessToken\", token);\n\n        axios.get(config.apiRootPath+'/v1/profileUrl',{headers:{\n          'Authorization': `Bearer ${token}`\n        }}).then(profileRes =>{\n          let profileData = profileRes.data;;\n          let {profileUrl} = profileData;\n          \n          if (token !== null && token !== undefined) {\n            var decoded = jwtDecode(token);\n            decoded['profileUrl'] = profileUrl;\n            dispatch({\n              payload: {\n                ...res.data,\n                token: token,\n                firstname: decoded.firstname,\n                middlename: decoded.middlename,\n                lastname: decoded.lastname,\n                username: decoded.username,\n                status: decoded.status,\n                userDetail: decoded,\n                emailId: decoded.emailId,\n                roleName: decoded.roleName,\n                isLoggedIn: true,\n                redirect: true,\n                profileUrl,\n                walletAddress: values.address\n              },\n              type: LOGIN,\n            });\n          } else {\n            dispatch({\n              payload: {\n                ...loginData,\n                message: message.loginErrorMessage,\n              },\n              type: LOGIN,\n            });\n          }\n        })\n\n        \n      } else {\n        dispatch({\n          payload: {\n            ...loginData,\n            message: message.loginErrorMessage,\n          },\n          type: LOGIN,\n        });\n      }\n    });\n};\n\nexport const completeSysCheck = (values: any) => async (dispatch: any) => {\n  if (\n    values[\"os\"] &&\n    values[\"browser\"] &&\n    values[\"bandwidth\"] &&\n    values[\"webgl\"]\n  ) {\n    dispatch({\n      payload: {...values},\n      type: SYSCHECK_PASSED,\n    });\n  } else {\n    dispatch({\n      payload: {},\n      type: SYSCHECK_FAILED,\n    });\n  }\n};\n\nexport const changePassword = (values: any) => async (dispatch: any) => {\n  var options = {\n    ConfirmPassword: values.ConfirmPassword,\n    Email: values.Email,\n    OldPassword: values.OldPassword,\n  };\n  await axios\n    .put(config.apiRootPath + config.changePasswordURL, options)\n    .then((resp) => {\n      if (resp.data.status === \"SUCCESS\") {\n        Global.alertContent = {\n          closable: false,\n          message: resp.data.userMessage,\n          status: \"success\",\n        };\n        dispatch({\n          payload: {},\n          type: CHANGE_PASSWORD,\n        });\n      } else {\n        Global.alertContent = {\n          closable: true,\n          message: resp.data.userMessage,\n          status: \"error\",\n        };\n        dispatch({\n          payload: {},\n          type: CHANGE_PASSWORD,\n        });\n      }\n    });\n};\n\nexport const getMetaData = (values: any) => async (dispatch: any) => {\n  var options = {\n    hostname: window.location.hostname,\n  };\n  await axios\n    .post(config.apiRootPath + config.getMetaDataURL, options)\n    .then((resp) => {\n      var bytes = cryptoJs.AES.decrypt(resp.data[\"metaData\"], config.secretKey);\n      let data = bytes.toString(cryptoJs.enc.Utf8);\n      let decryptedData = JSON.parse(data);\n      decryptedData.style = JSON.parse(decryptedData.style);\n      decryptedData.other_metadata = JSON.parse(decryptedData.other_metadata);\n      dispatch({\n        payload: decryptedData,\n        type: META_DATA,\n      });\n    });\n};\n\nexport const resetEvent = (values: any) => async (dispatch: any) => {\n  dispatch({\n    payload: {\n    },\n    type: RESET_EVENT,\n  });\n};\n\nexport const setWalletDetails = (values: any) => async (dispatch: any) => {\n  dispatch({\n    payload: {\n      ...values\n    },\n    type: SET_WALLET_DETAILS,\n  });\n};\n","import React, { Component } from 'react';\nimport {NavLink} from 'react-router-dom';\nimport { Form } from 'antd';\nimport { connect } from 'react-redux';\nimport {logoutAction, resetEvent} from '../../redux/actions/login/loginAction'\n\ntype MyProps = {\n  loginData: any;\n  logoutAction: any;\n  resetEvent: any;\n};\ntype MyState = {\n};\nclass Navbar extends React.Component<MyProps, MyState> {\n\n  resetEvent = () => {\n    this.props.resetEvent();\n  }\n\n  logout = () => {\n    this.props.logoutAction();\n  };\n\n    render() {\n        return (\n            <div>\n                {/* Header start */}\n  <header id=\"header\" className=\"header header-transparent\">\n    <div className=\"container\" style={{ maxWidth: \"inherit\" }}>\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\n        {/* logo*/}\n        <a className=\"navbar-brand\" href=\"/\" >\n          <img src=\"images/logos/nlc_logo.png\" alt=\"\" style={{width: '55px'}}/>\n        </a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\" style={{justifyContent: 'center'}}>\n          <ul className=\"navbar-nav\">\n          {/* <li><NavLink className='active' to='/'>Home</NavLink></li> */}\n          {/* <li><NavLink className='active' to='/about'>About EDUIGI</NavLink></li>\n          <li><NavLink className='active' to='/speakers'>Exhibitors </NavLink></li>\n          <li><NavLink className='active' to='/schedule'>Schedule</NavLink></li>\n          <li><NavLink className='active' to='/faqs'>FAQs</NavLink></li>\n          <li><NavLink className='active' to='/contact'>Contact Us</NavLink></li> */}\n          {this.props.loginData.isLoggedIn?(undefined):(\n            <li className=\"header-ticket nav-item\">\n              {/* <NavLink className='ticket-btn btn' to='/login' style={{color: 'white', fontSize: '16px', fontWeight: 700}}>Login</NavLink> */}\n            </li>\n          )}\n          </ul>\n        </div>\n        {this.props.loginData.isLoggedIn?(\n        <div>\n        <NavLink className='ticket-btn .btn.fill btn' to='/event' style={{height: '40px', color: '#fff', backgroundColor: '#ff007a'}} onClick={this.resetEvent}>Join Event</NavLink>&nbsp;\n        <span style={{ color: \"white\", fontSize: \"18px!important\" }}>\n          <img\n            className=\"schedule-slot-speakers\"\n            src=\"images/online.png\"\n            alt=\"online\"\n            style={{\n              padding: \"1px\",\n              width: \"15px\",\n              marginBottom: \"3px\",\n            }}\n          />{\" \"}\n          &nbsp;\n          {this.props.loginData[\"userDetail\"] === undefined\n            ? undefined\n            : this.props.loginData[\"userDetail\"][\"name\"]}\n        </span>\n        &nbsp;&nbsp;&nbsp;&nbsp;{\" \"}\n                <i\n                  className=\"fa fa-sign-out\"\n                  aria-hidden=\"true\"\n                  style={{ color: \"white\", fontSize: 25 }}\n                  onClick={this.logout}\n                ></i>\n        </div>\n        ):(undefined)}\n      </nav>\n    </div>{/* container end*/}\n  </header>\n  {/*/ Header end */}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData,\n});\n\nconst NavbarForm = Form.create({ name: \"Login\" })(Navbar);\n\nexport default connect(mapStateToProps, {logoutAction, resetEvent})(NavbarForm);\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {logoutAction} from \"../../redux/actions/login/loginAction\";\r\n\r\nfunction isMetaMaskInstalled() {\r\n  return Boolean(window.ethereum);\r\n}\r\n\r\nasync function readAddress() {\r\n  const method = \"eth_requestAccounts\";\r\n\r\n  const accounts = await window.ethereum.request<string[]>({\r\n    method\r\n  });\r\n\r\n  console.log('readaddress', accounts[0]);\r\n  return accounts[0];\r\n}\r\n\r\nfunction getSelectedAddress() {\r\n  return window.ethereum.selectedAddress;\r\n}\r\n\r\nconst ConnectWalletButton: React.FC<{\r\n  onChange: (address: string | undefined) => void;\r\n}> = ({ onChange }) => {\r\n  const [address, setAddress] = useState<string | undefined>(\r\n    getSelectedAddress()\r\n  );\r\n\r\n  const connectWallet = async () => {\r\n    const selectedAddress = await readAddress();\r\n\r\n    setAddress(selectedAddress);\r\n    onChange(selectedAddress);\r\n  };\r\n  \r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log('accountchanged');\r\n    const eventName = `accountsChanged`;\r\n\r\n    if (!isMetaMaskInstalled()) {\r\n      return;\r\n    }\r\n\r\n\r\n    const listener = ([selectedAddress]: string[]) => {\r\n      if(!selectedAddress) {\r\n        console.log('Disconnected');\r\n        dispatch(logoutAction());\r\n      } else if(localStorage.getItem('currentWallet')!==selectedAddress) {\r\n        console.log('Address changed, logging out!');\r\n        dispatch(logoutAction());\r\n      }\r\n      setAddress(selectedAddress);\r\n      onChange(selectedAddress);\r\n    };\r\n\r\n    window.ethereum.on(eventName, listener);\r\n\r\n    return () => {\r\n      console.log('removelistener');\r\n      //window.ethereum.removeListener(eventName, listener);\r\n    };\r\n  }, [onChange]);\r\n\r\n  \r\n  if (!isMetaMaskInstalled()) {\r\n    return <>No wallet found. Please install MetaMask.</>;\r\n  }\r\n\r\n  return <button onClick={connectWallet} className=\"btn fill\" style={{\r\n    backgroundImage:\r\n      \"url('\" + \"/images/ether.png\" + \"')\",\r\n    backgroundSize: \"40px 40px\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPositionX: \"5px\",\r\n    backgroundPositionY: \"8px\",\r\n    backgroundColor: \"#ff007a\",\r\n    border: \"0px\",\r\n    color: \"white\",\r\n    fontSize: \"16px\",\r\n    fontWeight: 700,\r\n    width: \"260px\",\r\n  }}>{address?\"Continue with \"+address.substring(0,5)+\"...\":\"Login with Wallet\"}</button>;\r\n};\r\n\r\nexport default ConnectWalletButton;\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ethereum: {\r\n      removeListener<T>(event: string, cb: (params: T) => void): void;\r\n\r\n      request<T>(params: { method: string }): Promise<T>;\r\n\r\n      on<T>(event: string, cb: (params: T) => void): void;\r\n\r\n      selectedAddress: string | undefined;\r\n    };\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/nlc_land_logo.3ca716d8.png\";","import React, { Component, useState, useCallback } from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { Row, Input, Form, Button, Layout, Alert, Select } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Navbar from \"./Navbar\";\nimport ConnectWalletButton from \"./ConnectWalletButton\";\nimport {\n  loginAction,\n  logoutAction,\n  getMetaData,\n} from \"../../redux/actions/login/loginAction\";\nimport landLogo from \"./nlc_land_logo.png\";\nimport \"./Home.css\";\ntype MyProps = {\n  inmemoryLanguage: any;\n  logoutAction: any;\n  loginAction: any;\n  getMetaData: any;\n  loginData: any;\n  metaData: any;\n  form: any;\n};\ntype MyState = {\n  captchaError: string;\n  language: string;\n  captchaValue: string;\n  toastLoaded: boolean;\n};\n\nclass Home extends React.Component<MyProps, MyState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      captchaError: \"\",\n      language: \"en\",\n      captchaValue: \"\",\n      toastLoaded: false,\n    };\n  }\n\n  renderRedirect = () => {\n    if (this.props.loginData.redirect) {\n      switch (this.props.loginData.roleName) {\n        case \"Visitor\":\n          return <Redirect to=\"/event\" />;\n        case \"Exhibitor\":\n          return <Redirect to=\"/dashboard\" />;\n        case \"Admin\":\n          return <Redirect to=\"/admindashboard\" />;\n        default:\n          return <Redirect to=\"/event\" />;\n      }\n    }\n  };\n\n  addressChanged = (address) => {\n    if (address.startsWith(\"0x\")) {\n      this.props.loginAction({\n        userName: \"adheepism@gmail.com\",\n        password: \"welcome1\",\n        address,\n      });\n      localStorage.setItem(\"currentWallet\", address);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar></Navbar>\n        {this.renderRedirect()}\n        <div>\n          <div className=\"body-inner\">\n            <section\n              className=\"main-slider owl-carousel\"\n            >\n              <div\n                className=\"banner-item overlay\"\n                style={{ backgroundImage: \"url(images/hero_area/banner3.jpg)\" }}\n              >\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-5 mx-auto\">\n                      <div\n                        className=\"banner-content-wrap text-left\"\n                        style={{\n                          padding: \"220px 0 200px\",\n                          alignContent: \"flex-start\",\n                        }}\n                      >\n                        <h1 style={{ color: \"white\" }}>NxtLand Club</h1>\n                        {/* <img src=\"images/logos/prop_expo.jpg\" alt=\"\" style={{width:'100%',padding:'0px 50px'}}/> */}\n                        <p\n                          style={{\n                            color: \"#fff\",\n                            fontSize: \"25px\",\n                            fontWeight: \"bolder\",\n                            lineHeight: \"1.5em\",\n                          }}\n                        >\n                          World's first open Metaverse\n                        </p>\n                        <p\n                          style={{\n                            color: \"#fff\",\n                            fontSize: \"25px\",\n                            fontWeight: \"normal\",\n                            lineHeight: \"1.5em\",\n                            width: \"250px!important;\",\n                          }}\n                        >\n                          Explore the virtual world and earn points as your NLC\n                          supported NFT avatar and convert them to a real world\n                          coupons and assets\n                        </p>\n\n                        <div className=\"banner-btn\">\n                          {Boolean(window.ethereum) ? (\n                            <ConnectWalletButton\n                              onChange={this.addressChanged}\n                            />\n                          ) : undefined}\n                        </div>\n                        {Boolean(window.ethereum) ? (\n                          <p\n                            style={{\n                              color: \"#fff\",\n                              fontSize: \"30px\",\n                              fontWeight: \"bolder\",\n                              lineHeight: \"1.5em\",\n                              marginLeft: \"10%\",\n                            }}\n                          >\n                            or\n                          </p>\n                        ) : undefined}\n                        <div className=\"banner-btn\">\n                          {false ? (\n                            <NavLink\n                              className=\"btn fill\"\n                              style={{\n                                backgroundColor: \"#ff007a\",\n                                border: \"0px\",\n                                color: \"white\",\n                                fontSize: \"16px\",\n                                fontWeight: 700,\n                              }}\n                              to=\"/register\"\n                            >\n                              Register\n                            </NavLink>\n                          ) : undefined}\n\n                          <NavLink\n                            className=\"btn fill\"\n                            to=\"/inviteLogin\"\n                            style={{\n                              color: \"white\",\n                              fontSize: \"16px\",\n                              fontWeight: 700,\n                            }}\n                          >\n                            Login via Invite\n                          </NavLink>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-lg-5 mx-auto\">\n                      <div className=\"text-right\">\n                        <img\n                          src={landLogo}\n                          className=\"move nlc-land-logo\"\n                        ></img>\n                      </div>\n                      {/* Banner content wrap end */}\n                    </div>\n                    {/* col end*/}\n                  </div>\n                  {/* row end*/}\n                </div>\n                {/* Container end */}\n              </div>\n              {/* banner item end*/}\n            </section>\n            <section className=\"ts-event-outcome\">\n              <div className=\"row\">\n                <div className=\"col-md-12 col-lg-12 text-center\">\n                  \\\n                  <h3 style={{ color: \"wheat\" }}>\n                    To schedule a demo of our open Metaverse visit\n                    <a\n                      style={{ color: \"red\" }}\n                      href=\"https://techfully.io/\"\n                      target=\"_blank\"\n                    >\n                      {\" \"}\n                      Techfully\n                    </a>{\" \"}\n                    or call +91 9976 920 285\n                  </h3>\n                </div>\n              </div>\n            </section>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData,\n  metaData: state.metaData,\n});\n\nconst LoginuserForm = Form.create({ name: \"Login\" })(Home);\n\nexport default connect(mapStateToProps, {\n  loginAction,\n  logoutAction,\n  getMetaData,\n})(LoginuserForm);\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { Row, Input, Form, Button, Layout, Alert, Select } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Navbar from \"./Navbar\";\nimport {\n  loginAction,\n  logoutAction,\n  getMetaData,\n} from \"../../redux/actions/login/loginAction\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { toast } from \"react-toastify\";\n\ntype MyProps = {\n  inmemoryLanguage: any;\n  logoutAction: any;\n  loginAction: any;\n  getMetaData: any;\n  loginData: any;\n  metaData: any;\n  form: any;\n  resetStatus: any;\n};\ntype MyState = {\n  captchaError: string;\n  language: string;\n  captchaValue: any;\n  toastLoaded: any;\n};\nconst recaptchaRef = React.createRef();\n\nclass Login extends React.Component<MyProps, MyState> {\n  componentWillMount() {\n    this.props.logoutAction();\n  }\n\n  componentDidMount() {\n    this.setState(\n      {\n        toastLoaded: false\n      }\n    )\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      captchaError: \"\",\n      language: \"en\",\n      captchaValue: \"\",\n      toastLoaded: false\n    };\n  }\n\n  handleSubmit = (e: any) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err: any, values: any) => {\n      if (!err) {\n        if (this.state.captchaValue !== \"\")  {\n          this.props.loginAction(values);\n        } else {\n          this.setState({\n            captchaError: \"Please complete the Capcha\",\n          });\n        }\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  onChange = (value) => {\n    this.setState({\n      captchaError: \"\",\n      captchaValue: value,\n    });\n  };\n\n  renderRedirect = () => {\n    if (this.props.loginData.redirect) {\n      switch (this.props.loginData.roleName) {\n        case \"Visitor\":\n          return <Redirect to=\"/event\" />;\n        case \"Exhibitor\":\n          return <Redirect to=\"/dashboard\" />;\n        case \"Admin\":\n          return <Redirect to=\"/admindashboard\" />;\n        default:\n          return <Redirect to=\"/event\" />;\n      }\n    }\n  };\n\n  toast = () => {\n    if(!this.state.toastLoaded && this.props.resetStatus.otpValidated) {\n      toast.success('Your password reset successfully!', {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n      this.setState({\n        toastLoaded: true\n      });\n    }\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        <Navbar></Navbar>\n        {this.renderRedirect()}\n        {this.toast()}\n        <div className=\"body-inner\">\n          <div\n            id=\"page-banner-area\"\n            className=\"page-banner-area\"\n            style={{\n              backgroundImage: \"url(images/hero_area/banner_bg.jpg)\",\n              minHeight: \"90px\",\n            }}\n          ></div>\n          {/* Page Banner end */}\n          <section className=\"ts-contact-form\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-8 mx-auto\">\n                  <h2 className=\"section-title text-center\">Login</h2>\n                </div>\n                {/* col end*/}\n              </div>\n              <div className=\"row\">\n                <div className=\"col-lg-8 mx-auto\">\n                  <Form\n                    onSubmit={this.handleSubmit}\n                    id=\"123\"\n                    className=\"form-signin\"\n                  >\n                    <div className=\"\">\n                      <div className=\"form-info\">\n                        <Form.Item>\n                          {getFieldDecorator(\"userName\", {\n                            rules: [\n                              {\n                                message: \"Please enter Email\",\n                                required: true,\n                              },\n                              {\n                                max: 100,\n                                message:\n                                  \"Email should be accept maximum 35 characters\",\n                              },\n                              {\n                                message: \"Email should be minimum 4 characters\",\n                                min: 4,\n                              },\n                            ],\n                          })(\n                            <div className=\"row\">\n                              <div className=\"col-md-6 mx-auto\">\n                                <div className=\"form-group\" style={{marginBottom:\"6px\"}}>\n                                  <Input\n                                    className=\"form-control form-control-email\"\n                                    placeholder=\"Username\"\n                                    name=\"email\"\n                                    id=\"email\"\n                                    type=\"email\"\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          )}\n                        </Form.Item>\n                      </div>\n                    </div>\n                    <div className=\"\">\n                      <div className=\"form-info\">\n                        <Form.Item>\n                          {getFieldDecorator(\"password\", {\n                            rules: [\n                              {\n                                message: \"Please enter Password\",\n                                required: true,\n                              },\n                              {\n                                max: 25,\n                                message:\n                                  \"Password should be accept maximum 25 characters\",\n                              },\n                              {\n                                message:\n                                  \"Password should be minimum 5 characters\",\n                                min: 5,\n                              },\n                            ],\n                          })(\n                            <div className=\"row\">\n                              <div className=\"col-md-6 mx-auto\">\n                                <div className=\"form-group\" style={{marginBottom:\"6px\"}}>\n                                  <Input\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                    name=\"password\"\n                                    id=\"subject\"\n                                    type=\"password\"\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          )}\n                        </Form.Item>\n                      </div>\n                    </div>\n\n                    <div className=\"text-center\" style={{ color: \"red\" }}>\n                      {this.props.loginData.message}\n                    </div>\n                    <div className=\"row\" style={{justifyContent: 'center'}}>\n                      <div className=\"col-md-12 col-lg-6\" style={{marginLeft: '5%'}}>\n                        <ReCAPTCHA\n                          ref={recaptchaRef}\n                          sitekey=\"6Le58rIZAAAAACt9kATvOmTggEmJOLE1H_xYdh9M\"\n                          onChange={this.onChange}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"captchaerror\" style={{textAlign:'center',color:'red'}}>\n                      {this.state.captchaError}\n                    </div>\n                    <div className=\"text-center\">\n                      <br />\n                      <Button\n                        className=\"btn\"\n                        style={{\n                          color: \"white\",\n                          fontSize: \"16px\",\n                          fontWeight: 700,\n                          backgroundColor: \"#d20055\",\n                        }}\n                        htmlType=\"submit\"\n                      >\n                        Login\n                      </Button>\n                    </div>\n                    <br></br>\n                    {false?(<div className=\"row\">\n                      <div className=\"col-md-6 mx-auto\" style={{textAlign:'center', color: '#3b1d82', fontWeight: 'bold'}}>\n                        <span>\n                          Forgot your password?{\" \"}\n                          <NavLink to=\"/reset\">Click here</NavLink>\n                          <br></br>\n                          or\n                        </span>\n                      </div>\n                    </div>):undefined}\n                    {false?(<div className=\"row\">\n                      <div className=\"col-md-6 mx-auto\" style={{textAlign:'center', color: '#3b1d82', fontWeight: 'bold'}}>\n                        <span>\n                          Would you like to register?{\" \"}\n                          <NavLink to=\"/register\">Sign up</NavLink>\n                        </span>\n                      </div>\n                    </div>):undefined}                    \n                  </Form>\n                </div>\n              </div>\n            </div>\n            <div className=\"speaker-shap\">\n              <img\n                className=\"shap1\"\n                src=\"images/shap/home_schedule_memphis2.png\"\n                alt=\"\"\n              />\n            </div>\n          </section>\n          {/* ts footer area start*/}\n\n          {/* ts footer area end*/}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData,\n  metaData: state.metaData,\n  resetStatus: state.resetStatus\n});\n\nconst LoginuserForm = Form.create({ name: \"Login\" })(Login);\n\nexport default connect(mapStateToProps, {\n  loginAction,\n  logoutAction,\n  getMetaData,\n})(LoginuserForm);\n","import {\n  REGISTER_USER,\n  REGISTRATION_FAILED,\n  REGISTRATION_SUCCESS,\n  OTP_VALIDATION_FAILURE,\n  OTP_VALIDATION_SUCCESS,\n} from \"../types\";\nimport fetch from \"../../../utils/leoFetch\";\nimport axios from \"../../../utils/leoAxios\";\nimport history from \"../../../history\";\nimport Global from \"../../../components/layout/Global/Global\";\nimport message from \"../../../components/messages/message.json\";\nimport { config } from \"../../../config/configs\";\n\nexport const registerAction = (values: any) => (dispatch: any) => {\n  let payload = { ...values };\n\n  axios\n    .post(config.apiRootPath + config.registerURL, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((res: any) => {\n      if (res.data.success == \"false\") {\n       \n        dispatch({ payload: {...values,...res.data}, type: REGISTRATION_FAILED });\n      } else {\n        dispatch({\n          payload: { ...values, isRegistered: true, ...res },\n          type: REGISTRATION_SUCCESS,\n        });\n      }\n    })\n};\n\nexport const validateOTP = (values: any) => (dispatch: any) => {\n  let payload = { ...values };\n  axios\n    .post(config.apiRootPath + config.validateOTP, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((res: any) => {\n      if (res.data.success == true) {\n        dispatch({\n          type: OTP_VALIDATION_SUCCESS,\n          payload: {\n            ...values,\n            ...res.data,\n            otpValidated: true,\n            otpValidationMessage: \"\",\n          },\n        });\n      } else {\n        dispatch({\n          type: OTP_VALIDATION_FAILURE,\n          payload: {\n            ...res.data          },\n        });\n      }\n    });\n};","import React, { Component } from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport {\n  registerAction,\n  validateOTP,\n} from \"../../redux/actions/register/registerAction\";\nimport FileBase64 from \"react-file-base64\";\nimport { connect } from \"react-redux\";\nimport Navbar from \"./Navbar\";\n\nimport {\n  Row,\n  Input,\n  Form,\n  Button,\n  Layout,\n  Alert,\n  Select,\n  InputNumber,\n} from \"antd\";\nconst { Option } = Select;\n\n\nconst recaptchaRef = React.createRef();\ntype MyProps = {\n  inmemoryLanguage: any;\n  registerAction: any;\n  registerStatus: any;\n  validateOTP: any;\n  form: any;\n};\ntype MyState = {\n  captchaError: string;\n  language: string;\n  formValue: any;\n  file: any;\n  fileError: any;\n};\nclass Register extends Component<MyProps, MyState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      captchaError: \"\",\n      language: \"en\",\n      formValue: {},\n      file: {},\n      fileError: \"\",\n    };\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"captcha error\");\n  };\n\n  onChange = (value) => {\n  };\n\n  customScoreValidator = (value) => {\n    this.props.form.setFields({\n      score: {\n        value,\n        errors: [new Error(\"Invalid input\")],\n      },\n    });\n  };\n  returnNumber = (number: number) => {\n    return number;\n  };\n  renderRedirect = () => {\n    if (this.props.registerStatus.otpValidated) {\n      //return <Redirect to=\"/\" />;\n    }\n  };\n  checkFileUpload() {\n    let { file } = this.state;\n    if (file !== undefined && file !== null) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  getFiles(files) {\n    let { size } = files;\n    if (parseInt(size.replace(\"kB\", \"\")) > 500) {\n      this.setState({ fileError: `File size cannot exceed 500 KB` });\n    } else {\n      this.setState({ file: files, fileError: \"\" });\n    }\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        <Navbar></Navbar>\n        {this.renderRedirect()}\n        <div className=\"body-inner\">\n          <div\n            id=\"page-banner-area\"\n            className=\"page-banner-area\"\n            style={{\n              backgroundImage: \"url(images/hero_area/banner_bg.jpg)\",\n              minHeight: \"90px\",\n            }}\n          ></div>\n          {/* Page Banner end */}\n          <section\n            className=\"ts-contact-form\"\n            style={{\n              padding: \"30px\",\n              backgroundImage: \"url(images/hero_area/speaker_bg.jpg)\",\n              display: this.props.registerStatus.otpValidated\n                ? \"none\"\n                : \"contents\",\n            }}\n          >\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-8 mx-auto\">\n                  <h2\n                    className=\"section-title text-center\"\n                    style={{ marginBottom: \"20px\" }}\n                  >\n                    Register for the Event\n                  </h2>\n                </div>\n                {/* col end*/}\n              </div>\n\n              <Formik\n                initialValues={{\n                  name: \"\",\n                  gender: \"female\",\n                  parentName: \"\",\n                  emailId: \"\",\n                  password: \"\",\n                  mobileNumber: \"\",\n                  confirmPassword: \"\",\n                  board: \"STATEBOARD\",\n                  score: \"\",\n                  cutOff: \"\",\n                  scholarshipEligibility: \"none\",\n                  desiredCourse: \"engineering\",\n                  decidedCourse: \"no\",\n                  decidedCollege: \"no\",\n                  needScholarship: \"no\",\n                  fatherIncome: \"\",\n                  purposeOfVisit: \"\",\n                  studentName: \"\",\n                  visitorType: \"others\",\n                  userType: \"Visitor\",\n                  eventName: \"Edu Fair 2020\",\n                  roleName: \"Visitor\",\n                  referredCode: \"\",\n                }}\n                validate={(values) => {\n                  const errors: any = {};\n                  let requiredFields = [];\n                  if (values.visitorType == \"others\") {\n                    requiredFields = [\n                      \"name\",\n                      \"password\",\n                      \"confirmPassword\",\n                      \"mobileNumber\",\n                      \"emailId\",\n                      \"gender\",\n                    ];\n                  } else {\n                    requiredFields = [\n                      \"name\",\n                      \"password\",\n                      \"gender\",\n                      \"confirmPassword\",\n                      \"mobileNumber\",\n                      \"emailId\",\n                      \"desiredCourse\",\n                    ];\n                  }\n\n                  if (!values.emailId) {\n                    errors.email = \"Required\";\n                  } else if (\n                    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\n                      values.emailId\n                    )\n                  ) {\n                    errors.emailId = \"Invalid email address\";\n                  }\n                  let mobileNumberPattern = /^[0-9]{10}$/;\n                  let scorePattern = /^[0-9]$/;\n                  // //let cutOffPattern = /^[0-9]$/;\n                  if (parseInt(values.score) > 1200) {\n                    errors.score = \"Score cannot be more than 1200\";\n                  } else if (parseInt(values.score) < 1) {\n                    errors.score = \"Score cannot be less than 1\";\n                  }\n                  if (values.password !== values.confirmPassword) {\n                    errors.confirmPassword = \"Password mismatch\";\n                  }\n                  if (!mobileNumberPattern.test(values.mobileNumber)) {\n                    errors.mobileNumber = \"Enter a valid mobile number\";\n                  }\n\n                  // if (parseInt(values.cutOff) > 200) {\n                  //   errors.cutOff = \"CutOff cannot be more than 200\";\n                  // } else if (parseInt(values.cutOff) < 1) {\n                  //   errors.cutOff = \"CutOff cannot be less than 1\";\n                  // }\n                  requiredFields.map((f) => {\n                    if (!values[f]) {\n                      errors[f] = \"Required\";\n                    }\n                  });\n                  return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                  let { file } = this.state;\n                  let { base64 } = file;\n                  let resultString = base64.split(\",\")[1];\n                  this.props.registerAction({\n                    ...values,\n                    profileUrl: resultString,\n                  });\n                  setSubmitting(false);\n                }}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting,\n                }) => (\n                  <form\n                    onSubmit={handleSubmit}\n                    style={{\n                      display:\n                        this.props.registerStatus.isRegistered &&\n                        !this.props.registerStatus.otpValidated\n                          ? \"none\"\n                          : \"contents\",\n                    }}\n                  >\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n                        <label className=\"required\">Full Name</label>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"text\"\n                            name=\"name\"\n                            className=\"form-control\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.name}\n                          />\n                          <span style={{ color: \"red\" }}>\n                            {errors.name && touched.name && errors.name}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-6\">\n                        <label className=\"required\">Visitor Type</label>\n                        <div className=\"form-group\">\n                          <select\n                            name=\"visitorType\"\n                            className=\"form-control\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.visitorType}\n                          >\n                            <option value=\"others\" label=\"Others\" />\n                          </select>\n                          <span style={{ color: \"red\" }}>\n                            {errors.visitorType &&\n                              touched.visitorType &&\n                              errors.visitorType}\n                          </span>\n                        </div>\n                      </div>\n                      {values.visitorType == \"parent\" ? (\n                        <div className=\"col-md-6\">\n                          <label className=\"required\">Student Name </label>\n                          <div className=\"form-group\">\n                            <input\n                              type=\"text\"\n                              name=\"studentName\"\n                              className=\"form-control\"\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={values.studentName}\n                            />\n                            <span style={{ color: \"red\" }}>\n                              {errors.studentName &&\n                                touched.studentName &&\n                                errors.studentName}\n                            </span>\n                          </div>\n                        </div>\n                      ) : (\n                        <span />\n                      )}\n                      {values.visitorType == \"others\" ? (\n                        <div className=\"col-md-6\">\n                          <label>Purpose of Visit </label>\n                          <div className=\"form-group\">\n                            <input\n                              type=\"text\"\n                              name=\"purposeOfVisit\"\n                              className=\"form-control\"\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={values.purposeOfVisit}\n                            />\n                            <span style={{ color: \"red\" }}>\n                              {errors.purposeOfVisit &&\n                                touched.purposeOfVisit &&\n                                errors.purposeOfVisit}\n                            </span>\n                          </div>\n                        </div>\n                      ) : (\n                        <span />\n                      )}\n                      <div className=\"col-md-6\">\n                        <label className=\"required\">Gender</label>\n                        <div className=\"form-group\">\n                          <select\n                            name=\"gender\"\n                            className=\"form-control\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.gender}\n                          >\n                            <option value=\"male\" label=\"Male\" />\n                            <option value=\"female\" label=\"Female\" />\n                          </select>\n                          <span style={{ color: \"red\" }}>\n                            {errors.gender && touched.gender && errors.gender}\n                          </span>\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-6\">\n                        <label className=\"required\">Email</label>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"email\"\n                            name=\"emailId\"\n                            className=\"form-control\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.emailId}\n                          />\n                          <span style={{ color: \"red\" }}>\n                            {errors.emailId &&\n                              touched.emailId &&\n                              errors.emailId}\n                          </span>\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-6\">\n                        <label className=\"required\">Mobile Number</label>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"tel\"\n                            name=\"mobileNumber\"\n                            onChange={handleChange}\n                            className=\"form-control\"\n                            onBlur={handleBlur}\n                            maxLength={this.returnNumber(10)}\n                            value={values.mobileNumber}\n                            pattern=\"[0-9]{10}\"\n                          />\n                          <span style={{ color: \"red\" }}>\n                            {errors.mobileNumber &&\n                              touched.mobileNumber &&\n                              errors.mobileNumber}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-6\">\n                        <label className=\"required\">Password</label>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"password\"\n                            name=\"password\"\n                            className=\"form-control\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                          />\n                          <span style={{ color: \"red\" }}>\n                            {errors.password &&\n                              touched.password &&\n                              errors.password}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-6\">\n                        <label className=\"required\">Confirm Password</label>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"password\"\n                            name=\"confirmPassword\"\n                            className=\"form-control\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.confirmPassword}\n                          />\n                          <span style={{ color: \"red\" }}>\n                            {errors.confirmPassword &&\n                              touched.confirmPassword &&\n                              errors.confirmPassword}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-6\">\n                        <label>Referral Code (Optional)</label>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"password\"\n                            name=\"referredCode\"\n                            className=\"form-control\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.referredCode}\n                          />\n                          <span style={{ color: \"red\" }}>\n                            {errors.referredCode &&\n                              touched.referredCode &&\n                              errors.referredCode}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-6\">\n                        <label>Please upload your picture</label>\n                        <div className=\"form-group\">\n                          <FileBase64\n                            multiple={false}\n                            onDone={this.getFiles.bind(this)}\n                          />\n                          <span style={{ color: \"red\" }}>\n                            {this.state.fileError}\n                          </span>\n                        </div>\n                      </div>\n\n                      {values.visitorType !== \"others\" ? (\n                        <div className=\"col-md-6\">\n                          <label className=\"required\">\n                            Board of Examination\n                          </label>\n                          <div className=\"form-group\">\n                            <select\n                              name=\"board\"\n                              className=\"form-control\"\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={values.board}\n                            >\n                              <option value=\"stateboard\" label=\"STATEBOARD\" />\n                              <option value=\"cbse\" label=\"CBSE\" />\n                            </select>\n                            <span style={{ color: \"red\" }}>\n                              {errors.board && touched.board && errors.board}\n                            </span>\n                          </div>\n                        </div>\n                      ) : (\n                        \"\"\n                      )}\n                      {values.visitorType !== \"others\" ? (\n                        <div className=\"col-md-6\">\n                          <label className=\"required\">Your marks</label>\n                          <div className=\"form-group\">\n                            <input\n                              type=\"text\"\n                              name=\"score\"\n                              className=\"form-control\"\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              maxLength={this.returnNumber(4)}\n                              value={values.score}\n                              pattern=\"[0-9]+\"\n                            />\n                            <span style={{ color: \"red\" }}>\n                              {errors.score && touched.score && errors.score}\n                            </span>\n                          </div>\n                        </div>\n                      ) : (\n                        \"\"\n                      )}\n\n                      {values.visitorType !== \"others\" ? (\n                        <div className=\"col-md-6\">\n                          <label className=\"required\">Desired Course</label>\n                          <div className=\"form-group\">\n                            <select\n                              name=\"desiredCourse\"\n                              className=\"form-control\"\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={values.desiredCourse}\n                            >\n                              <option value=\"engineering\" label=\"Engineering\" />\n                              <option value=\"arts\" label=\"Arts and Science\" />\n                              <option\n                                value=\"engg-arts\"\n                                label=\"Engineering & Arts and Science\"\n                              />\n                              <option value=\"others\" label=\"Other\" />\n                            </select>\n                            <span style={{ color: \"red\" }}>\n                              {errors.desiredCourse &&\n                                touched.desiredCourse &&\n                                errors.desiredCourse}\n                            </span>\n                          </div>\n                        </div>\n                      ) : (\n                        \"\"\n                      )}\n                    \n                    </div>\n                    <div className=\"row\">\n                      <div\n                        className=\"col-md-12\"\n                        style={{ textAlign: \"center\" }}\n                      >\n                        <img\n                          src={this.state.file.base64}\n                          style={{ width: \"20%\", marginBottom: \"8px\" }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div\n                        className=\"col-md-12\"\n                        style={{ textAlign: \"center\" }}\n                      >\n                        <button\n                          type=\"submit\"\n                          disabled={isSubmitting && this.checkFileUpload()}\n                          style={{\n                            backgroundColor: \"#ff007a\",\n                            border: \"0px\",\n                            color: \"white\",\n                            fontSize: \"16px\",\n                            width: \"300px\",\n                            height: \"40px\",\n                            fontWeight: 700,\n                          }}\n                        >\n                          Get OTP\n                        </button>\n                      </div>\n                    </div>\n\n                    {this.props.registerStatus.registrationErrorMessage !==\n                      \"\" ||\n                    this.props.registerStatus.registrationErrorMessage !==\n                      undefined ? (\n                      <div className=\"row\">\n                        <div\n                          className=\"col-md-12\"\n                          style={{ textAlign: \"center\" }}\n                        >\n                          <span\n                            style={{ color: \"red\" }}\n                          >{`${this.props.registerStatus.registrationErrorMessage}`}</span>\n                        </div>\n                      </div>\n                    ) : (\n                      <span />\n                    )}\n                  </form>\n                )}\n              </Formik>\n              <Formik\n                initialValues={{\n                  otp: \"\",\n                  userId: this.state.formValue.emailId,\n                  sessionId: this.props.registerStatus.otpSessionId,\n                }}\n                validate={(values) => {\n                  const errors: any = {};\n                  let requiredFields = [\"otp\"];\n                  let otpPattern = /^[0-9]{6}$/;\n                  if (!otpPattern.test(values.otp)) {\n                    errors.otp = \"Invalid input\";\n                  }\n                  requiredFields.map((f) => {\n                    if (!values[f]) {\n                      errors[f] = \"Required\";\n                    }\n                  });\n                  return errors;\n                }}\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                  this.props.validateOTP({\n                    ...values,\n                    userId: this.props.registerStatus.emailId || \"\",\n                    sessionId:\n                      this.props.registerStatus.data.otpSessionId || \"\",\n                  });\n                  setSubmitting(false);\n                  this.setState({ formValue: values });\n                  //resetForm({})\n                }}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  resetForm,\n                  isSubmitting = false,\n                  /* and other goodies */\n                }) => (\n                  <form\n                    onSubmit={handleSubmit}\n                    style={{\n                      display:\n                        !this.props.registerStatus.isRegistered &&\n                        !this.props.registerStatus.otpValidated\n                          ? \"none\"\n                          : \"contents\",\n                    }}\n                  >\n                    <div className=\"row\">\n                      <div\n                        className=\"col-md-12\"\n                        style={{ textAlign: \"center\" }}\n                      >\n                        <label className=\"required\">Enter OTP</label>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"text\"\n                            name=\"otp\"\n                            className=\"form-control\"\n                            maxLength={this.returnNumber(6)}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.otp}\n                          />\n                          <span style={{ color: \"red\" }}>\n                            {errors.otp && touched.otp && errors.otp}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div\n                        className=\"col-md-12\"\n                        style={{ textAlign: \"center\" }}\n                      >\n                        <button type=\"submit\" className=\"register-button\">\n                          Submit\n                        </button>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div\n                        className=\"col-md-12\"\n                        style={{ textAlign: \"center\" }}\n                      >\n                        <span style={{ color: \"red\" }}>{`${\n                          this.props.registerStatus.otpValidationMessage || \"\"\n                        }`}</span>\n                      </div>\n                    </div>\n                  </form>\n                )}\n              </Formik>\n            </div>\n          </section>\n          <section>\n            {this.props.registerStatus.otpValidated ? (\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <h4>\n                      Thanks for registering !!! You can login with the email\n                      and password you registered with on Event Date ( 24,25,26\n                      August 2020)\n                    </h4>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData,\n  metaData: state.metaData,\n  registerStatus: state.registration,\n});\nconst mapDispatchToProps = {\n  registerAction,\n};\nconst registerUserForm = Form.create({ name: \"Register\" })(Register);\n\nexport default connect(mapStateToProps, {\n  registerAction,\n  validateOTP,\n})(registerUserForm);\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"antd\";\nimport { logoutAction } from \"../../redux/actions/login/loginAction\";\n\ntype MyProps = {\n  inmemoryLanguage: any;\n  logoutAction: any;\n  loginAction: any;\n  getMetaData: any;\n  loginData: any;\n  metaData: any;\n  form: any;\n};\ntype MyState = {\n  captchaError: string;\n  language: string;\n};\n\nclass EventNavbar extends React.Component<MyProps, MyState> {\n  logout = () => {\n    this.props.logoutAction();\n  };\n  isLoggedIn = () => {\n    if (this.props.loginData.isLoggedIn == false) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n  showDisplayName = () => {\n    if(this.props.loginData[\"walletAddress\"]){\n      let walletDetails:string = localStorage.getItem(\"wallet-\"+this.props.loginData[\"walletAddress\"]);\n      if(walletDetails && !walletDetails.endsWith(\"null\")) {\n        let walletObj = JSON.parse(walletDetails);\n        if(walletObj[\"displayName\"]===undefined) {\n          let walletAddress = this.props.loginData[\"walletAddress\"];\n          let firstPart = walletAddress.substring(0, 5);\n          let lastPart = walletAddress.substring(walletAddress.length-5,walletAddress.length);\n          return firstPart + \"...\" + lastPart;\n        } else {\n          return walletObj[\"displayName\"];\n        }\n      } else {\n        let walletAddress = this.props.loginData[\"walletAddress\"];\n        let firstPart = walletAddress.substring(0, 5);\n        let lastPart = walletAddress.substring(walletAddress.length-5,walletAddress.length);\n        return firstPart + \"...\" + lastPart;\n      }\n    } else if(this.props.loginData[\"userDetail\"]) {\n      return this.props.loginData[\"userDetail\"][\"name\"];\n    } else {\n      return \"\";\n    }\n  }\n  render() {\n    return (\n      <div>\n        {/* Header start */}\n        {this.isLoggedIn()}\n        <header id=\"header\" className=\"header header-transparent\" style={{\n              backgroundImage: \"url(images/banner/leanr_bg.png)\",\n              minHeight: \"50px\",\n            }}>\n          <div className=\"container\" style={{ maxWidth: \"inherit\" }}>\n            <nav\n              className=\"navbar navbar-expand-lg navbar-light\"\n              style={{ height: \"50px\" }}\n            >\n              {/* logo*/}\n              <a className=\"navbar-brand\" href=\"#\">\n                <img src=\"images/logos/nlc_logo.png\" alt=\"\" style={{width: '40px'}} />\n              </a>\n              <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\" >\n                <ul className=\"navbar-nav ml-auto\" style={{flex:1, justifyContent: 'flex-start'}}>\n                  <li>\n                    <NavLink className=\"active\" to=\"/\">\n                    <i\n                  className=\"fa fa-home\"\n                  aria-hidden=\"true\"\n                  style={{ color: \"white\", fontSize: 25 }}\n                ></i>\n                      &nbsp;Home\n                    </NavLink>\n                  </li>\n                </ul>\n              </div>\n              <button\n                className=\"navbar-toggler\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#navbarNavDropdown\"\n                aria-controls=\"navbarNavDropdown\"\n                aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\"\n              >\n                <span className=\"navbar-toggler-icon\">\n                </span>\n              </button>\n              <div\n                className=\"collapse navbar-collapse\"\n                id=\"navbarNavDropdown\"\n                style={{ flex: 1, flexFlow: \"row\", justifyContent: \"flex-end\" }}\n              >\n                <span style={{ color: \"white\", fontSize: \"18px!important\" }}>\n                  <img\n                    className=\"schedule-slot-speakers\"\n                    src=\"images/online.png\"\n                    alt=\"online\"\n                    style={{\n                      padding: \"1px\",\n                      width: \"15px\",\n                      marginBottom: \"3px\",\n                    }}\n                  />{\" \"}\n                  &nbsp;\n                  {this.showDisplayName()}\n                </span>{\" \"}\n                &nbsp;&nbsp;&nbsp;&nbsp;{\" \"}\n                <i\n                  className=\"fa fa-sign-out\"\n                  aria-hidden=\"true\"\n                  style={{ color: \"white\", fontSize: 25 }}\n                  onClick={this.logout}\n                ></i>\n              </div>\n            </nav>\n          </div>\n          {/* container end*/}\n        </header>\n        {/*/ Header end */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData,\n  metaData: state.metaData,\n});\n\nconst LoginuserForm = Form.create({ name: \"Login\" })(EventNavbar);\n\nexport default connect(mapStateToProps, { logoutAction })(LoginuserForm);\n","import {\n  SYSCHECK_INIT,\n  SYSCHECK_FAILED,\n  SYSCHECK_PASSED,\n  WEBGL_LOGOUT,\n  SYSCHECK_CHAT\n} from \"../types\";\nimport axios from \"../../../utils/leoAxios\";\nimport history from \"../../../history\";\nimport Global from \"../../../components/layout/Global/Global\";\nimport message from \"../../../components/messages/message.json\";\nimport { config } from \"../../../config/configs\";\n\nexport const initSysCheck = () => (dispatch: any) => {\n  dispatch({\n    payload: {\n      systemCheck: true\n    },\n    type: SYSCHECK_INIT,\n  });\n};\n\nexport const webglLogout = () => (dispatch: any) => {\n  dispatch({\n    payload: {\n      webglLogout: true\n    },\n    type: WEBGL_LOGOUT,\n  });\n};\n\nexport const completeSysCheck = (values: any) => async (dispatch: any) => {\n  if (\n    values[\"os\"] &&\n    values[\"browser\"] &&\n    values[\"bandwidth\"] &&\n    values[\"webgl\"]\n  ) {\n    dispatch({\n      payload: {},\n      type: SYSCHECK_PASSED,\n    });\n  } else {\n    dispatch({\n      payload: {},\n      type: SYSCHECK_FAILED,\n    });\n  }\n};\n\nexport const getChatData = (values: any, callback) => (dispatch: any) => {\n  axios\n    .get(config.apiRootPath + config.getChatData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \"+values\n      },\n    })\n    .then((res: any) => {\n      if (res && res.data.success===true) {\n        dispatch({\n          payload: {exhibitorId: res.data.exhibitorId, exhibitorName: res.data.exhibitorName},\n          type: SYSCHECK_CHAT,\n        });\n        callback('wss://api.techfully.io/'+res.data.exhibitorId);\n      } else {\n      }\n    });\n};\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Form, Button } from \"antd\";\nimport { completeSysCheck } from \"../../redux/actions/login/loginAction\";\n\ntype MyProps = {\n  inmemoryLanguage: any;\n  logoutAction: any;\n  completeSysCheck: any;\n  getMetaData: any;\n  loginData: any;\n  metaData: any;\n  form: any;\n};\ntype MyState = {\n  captchaError: string;\n  language: string;\n  systemData: any;\n  os: string;\n  browser: string;\n  browserMessage: string;\n  webgl: boolean;\n  bandwidth: boolean;\n  osValue: string;\n  browserValue: string;\n  webglValue: string;\n  bandwidthValue: string;\n  osMessage: string;\n  mobile:boolean;\n};\n\nlet browserInfo = require(\"browser-info\");\n\nclass SystemCheck extends React.Component<MyProps, MyState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      captchaError: \"\",\n      language: \"en\",\n      os: \"false\",\n      osMessage: \"\",\n      browser: \"false\",\n      browserMessage: \"\",\n      mobile:this.mobCheck(),\n      webgl: false,\n      bandwidth: false,\n      systemData: {},\n      osValue: \"\",\n      browserValue: \"\",\n      webglValue: \"\",\n      bandwidthValue: \"\",\n    };\n  }\n  mobCheck = () => {\n    let check = false;\n    (function (a) {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      )\n        check = true;\n    })(navigator.userAgent || navigator.vendor);\n    return check;\n  };\n  componentWillMount() {\n    let data = browserInfo();\n    this.setState({\n      systemData: {\n        ...this.state.systemData,\n        ...data,\n      },\n    });\n  }\n\n  componentDidMount() {\n    let winNew  = [\"Windows 10\",\"Windows 7\",\"Windows 8\",\"Windows\",\"Linux\",\"iOS\",\"OS X\",\"Android\"];\n    if (winNew.includes(this.state.systemData['os'])){\n      setTimeout(() => {\n        this.setState({\n          os: \"true\",\n        });\n      }, 2000);\n     } else {\n      setTimeout(() => {\n        this.setState({\n          os: \"error\",\n          osMessage: \"Your OS version is not supported. Please run it from a different machine\"\n        });\n      }, 2000);\n     }\n    if ((this.state.systemData[\"name\"] === \"Chrome\" && parseInt(this.state.systemData[\"version\"])> 60) ||\n        (this.state.systemData[\"name\"] === \"Firefox\" && parseInt(this.state.systemData[\"version\"])> 50) ||\n        (this.state.systemData[\"name\"] === \"Safari\" && parseInt(this.state.systemData[\"version\"])> 11) ||\n        (this.state.systemData[\"name\"] === \"Edge\" && parseInt(this.state.systemData[\"version\"])> 15)) {\n          setTimeout(() => {\n            this.setState({\n              browser: \"true\",\n            });\n          }, 4000);\n    } else {\n      setTimeout(() => {\n        this.setState({\n          browser: \"error\",\n          browserMessage: \"Your browser is not supported. Try latest version of Chrome, Firefox or Edge\"\n        });\n      }, 4000);\n    }\n    if (this.state.systemData[\"os\"] !== \"\") {\n      setTimeout(() => {\n        this.setState({\n          webgl: true,\n          webglValue: \"Supported\",\n        });\n      }, 2000);\n    }\n    if (this.state.systemData[\"os\"] !== \"\") {\n      setTimeout(() => {\n        this.setState({\n          bandwidth: true,\n          bandwidthValue: \"> 2Mbps\",\n        });\n      }, 2000);\n    }\n  }\n\n  checkComplete = () => {\n    this.props.completeSysCheck(this.state);\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <div className=\"tab-content schedule-tabs\">\n            <br></br>\n            <div\n              role=\"tabpanel\"\n              className=\"tab-pane active\"\n              id=\"date3\"\n              style={{ backgroundColor: \"white\" }}\n            >\n              <div className=\"schedule-listing\">\n                <div\n                  className=\"schedule-slot-info\"\n                  style={{ padding: \"12px 20px 12px 140px\" }}\n                >\n                  {this.state.os===\"error\"?(\n                    <a href=\"#\">\n                      <img\n                        className=\"systemcheck\"\n                        src=\"images/error.png\"\n                        alt=\"\"\n                        style={{height: '4vw', width: '4vw'}}\n                      />\n                    </a>\n                  ):(\n                    <a href=\"#\">\n                      <img\n                        className=\"systemcheck\"\n                        src={\n                          this.state.os ? \"images/tick.png\" : \"images/spinner.gif\"\n                        }\n                        alt=\"\"\n                        style={{height: '4vw', width: '4vw'}}\n                      />\n                    </a>\n                  )}\n                  <div className=\"schedule-slot-info-content\">\n                    <h3 className=\"schedule-slot-title\">\n                      Operating System Check\n                      {!this.state.os ? (\n                        <img\n                          src=\"images/dots.gif\"\n                          style={{ width: \"50px\" }}\n                          alt=\"\"\n                        />\n                      ) : (\n                        <strong>( {this.state.systemData.os} )</strong>\n                      )}\n                    </h3>\n                    <p>\n                      {(this.state.os) === \"error\"?(\n                        this.state.osMessage\n                      ):(\n                        this.state.mobile?\"\":\n                        \"Verifying Operating System is essential because certain OS\\\n                        and version doesn't support high end graphics rendering.\\\n                        This might cause some slowness in the user experience\"\n                      )}\n                    </p>\n                  </div>\n                  {/*Info content end */}\n                </div>\n                {/* Slot info end */}\n              </div>\n              {/*schedule-listing end */}\n              <div className=\"schedule-listing\">\n                <div\n                  className=\"schedule-slot-info\"\n                  style={{ padding: \"12px 20px 12px 140px\" }}\n                >\n                  {this.state.browser===\"error\"?(\n                    <a href=\"#\">\n                      <img\n                        className=\"systemcheck\"\n                        src=\"images/error.png\"\n                        alt=\"\"\n                        style={{height: '4vw', width: '4vw'}}\n                      />\n                    </a>\n                  ):(\n                    <a href=\"#\">\n                      <img\n                        className=\"systemcheck\"\n                        src={\n                          this.state.browser ? \"images/tick.png\" : \"images/spinner.gif\"\n                        }\n                        alt=\"\"\n                        style={{height: '4vw', width: '4vw'}}\n                      />\n                    </a>\n                  )}\n                  <div className=\"schedule-slot-info-content\">\n                    <h3 className=\"schedule-slot-title\">\n                      Browser Check\n                      {!this.state.browser ? (\n                        <img\n                          src=\"images/dots.gif\"\n                          style={{ width: \"50px\" }}\n                          alt=\"\"\n                        />\n                      ) : (\n                        <strong>\n                          ( {this.state.systemData.name}{\" \"}\n                          {this.state.systemData.version} )\n                        </strong>\n                      )}\n                    </h3>\n                    <p>\n                      {this.state.browser === \"error\"?(\n                          this.state.browserMessage\n                        ):(\n                        this.state.mobile?\"\":\n                        \"Certain old browsers do not support loading 3D models and\\\n                        rendering. Hence browser validation is essential for an\\\n                        unhindered user experience\"\n                        )}\n                    </p>\n                  </div>\n                  {/*Info content end */}\n                </div>\n                {/* Slot info end */}\n              </div>\n              {/*schedule-listing end */}\n              <div className=\"schedule-listing\">\n                <div\n                  className=\"schedule-slot-info\"\n                  style={{ padding: \"12px 20px 12px 140px\" }}\n                >\n                  <a href=\"#\">\n                    <img\n                      className=\"systemcheck\"\n                      src={\n                        this.state.webgl\n                          ? \"images/tick.png\"\n                          : \"images/spinner.gif\"\n                      }\n                      alt=\"\"\n                      style={{height: '4vw', width: '4vw'}}\n                    />\n                  </a>\n                  <div className=\"schedule-slot-info-content\">\n                    <h3 className=\"schedule-slot-title\">\n                      3D and Graphics Check\n                      {!this.state.webgl ? (\n                        <img\n                          src=\"images/dots.gif\"\n                          style={{ width: \"50px\" }}\n                          alt=\"\"\n                        />\n                      ) : (\n                        <strong>( {this.state.webglValue} )</strong>\n                      )}\n                    </h3>\n                    {this.state.mobile?undefined:(\n                      <p>\n                        Ensuring any graphics settings has been disabled or\n                        unavailable. This is very crucial for smooth rendering and\n                        navigation within the Expo\n                      </p>\n                    )}\n                  </div>\n                  {/*Info content end */}\n                </div>\n                {/* Slot info end */}\n              </div>\n              {/*schedule-listing end */}\n              <div className=\"schedule-listing\">\n                <div\n                  className=\"schedule-slot-info\"\n                  style={{ padding: \"12px 20px 12px 140px\" }}\n                >\n                  <a href=\"#\">\n                    <img\n                      className=\"systemcheck\"\n                      src={\n                        this.state.bandwidth\n                          ? \"images/tick.png\"\n                          : \"images/spinner.gif\"\n                      }\n                      alt=\"\"\n                      style={{height: '4vw', width: '4vw'}}\n                    />\n                  </a>\n                  <div className=\"schedule-slot-info-content\">\n                    <h3 className=\"schedule-slot-title\">\n                      Bandwidth\n                      {!this.state.bandwidth ? (\n                        <img\n                          src=\"images/dots.gif\"\n                          style={{ width: \"50px\" }}\n                          alt=\"\"\n                        />\n                      ) : (\n                        <strong>( {this.state.bandwidthValue} )</strong>\n                      )}\n                    </h3>\n                    {this.state.mobile?undefined:(\n                      <p>\n                      Make sure you have atleast 2Mbps of network speed. The\n                      event might take longer time to load on a lower bandwidth,\n                      so be patient\n                    </p>\n                    )}\n                  </div>\n                  {/*Info content end */}\n                </div>\n                {/* Slot info end */}\n              </div>\n              {/*schedule-listing end */}\n            </div>\n          </div>\n        </div>\n        {(this.state.bandwidth && (this.state.os!=='error' && this.state.browser!=='error'))?(\n        <div className=\"banner-content-wrap text-center\" style={{width: '100%', padding: '30px'}}>\n          <Button\n            onClick={this.checkComplete}\n            href=\"#\"\n            className=\"btn\"\n            style={{\n              backgroundColor: \"#ff007a\",\n              color: \"white\",\n              fontSize: \"16px\",\n              fontWeight: 700,\n              padding: \"15px\",\n              width: \"150px\",\n            }}\n          >Continue\n          </Button>\n        </div>):undefined}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData,\n  metaData: state.metaData,\n});\n\nconst LoginuserForm = Form.create({ name: \"Login\" })(SystemCheck);\n\nexport default connect(mapStateToProps, { completeSysCheck })(LoginuserForm);\n","import React, { Component } from \"react\";\nimport { Button, Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport {initSysCheck} from '../../redux/actions/systemCheck/systemCheckAction'\nlet browserInfo = require(\"browser-info\");\ntype MyProps = {\n  loginData: any;\n  initSysCheck: any;\n};\ntype MyState = {\n  systemCheck: boolean;\n  browserInfo: any;\n  mobile:boolean;\n};\n\nclass Calibaration extends React.Component<MyProps, MyState> {\n\n  constructor(props: any) {\n    super(props);\n    let data = browserInfo();\n    this.state = {\n      systemCheck: false,\n      browserInfo: data,\n      mobile:this.mobCheck()\n    }\n  }\n  mobCheck = () => {\n    let check = false;\n    (function (a) {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      )\n        check = true;\n    })(navigator.userAgent || navigator.vendor);\n    return check;\n  };\n  systemCheck = () => {\n    this.props.initSysCheck();\n  };\n\n  render() {\n    return (\n      <div className={this.state.mobile?\"text-center\":\"banner-content-wrap text-center\"}>\n        <div className=\"row\">\n          <div className=\"col-lg-8 mx-auto\">\n            <h2 className=\"section-title1 text-center\">\n              System Check and Calibaration\n              <span style={{ marginTop: \"20px\" }}>\n                Your device and browser needs to be calibarated\n              </span>\n            </h2>\n          </div>\n          {/* col end*/}\n        </div>\n        <Button\n          onClick={this.systemCheck}\n          href=\"#\"\n          className=\"btn\"\n          style={{\n            backgroundColor: \"#ff007a\",\n            color: \"white\",\n            fontSize: \"16px\",\n            fontWeight: 700,\n            padding: \"15px\",\n            width: \"100px\",\n          }}\n        >\n          Start\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData\n});\n\nconst CalibarationForm = Form.create({ name: \"SysCheck\" })(Calibaration);\n\nexport default connect(mapStateToProps, {\n  initSysCheck\n})(CalibarationForm);\n","import React, { Component } from \"react\";\nimport { Button, Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { initSysCheck } from \"../../redux/actions/systemCheck/systemCheckAction\";\nimport SystemCheck from \"./SystemCheck\";\nimport Calibaration from \"./Calibaration\";\n\ntype MyProps = {\n  loginData: any;\n  initSysCheck: any;\n  systemCheck: any;\n};\ntype MyState = {\n  systemCheck: boolean;\n};\n\nclass EventHome extends React.Component<MyProps, MyState> {\n  systemCheck = () => {\n    this.props.initSysCheck();\n  };\n\n  render() {\n    return (\n      <div\n        className=\"banner-item\"\n        style={{\n          backgroundImage: \"url(images/speakers/speaker_bg.png)\",\n        }}\n      >\n        <div className=\"speaker-shap\">\n          <img\n            className=\"shap1\"\n            src=\"images/shap/home_speaker_memphis1.png\"\n            alt=\"\"\n          />\n          <img\n            className=\"shap2\"\n            src=\"images/shap/home_speaker_memphis2.png\"\n            alt=\"\"\n          />\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-11 mx-auto\">\n              {this.props.systemCheck.systemCheck ? (\n                <SystemCheck></SystemCheck>\n              ) : (\n                <Calibaration></Calibaration>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData,\n  systemCheck: state.systemCheck\n});\n\nconst EventHomeForm = Form.create({ name: \"SysCheck\" })(EventHome);\n\nexport default connect(mapStateToProps, {\n  initSysCheck,\n})(EventHomeForm);\n","export default __webpack_public_path__ + \"static/media/NLC_Empty.5c1f028e.jpg\";","import React, { Component } from \"react\";\nimport { Input, Form, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { initSysCheck } from \"../../redux/actions/systemCheck/systemCheckAction\";\nimport SystemCheck from \"./SystemCheck\";\nimport Calibaration from \"./Calibaration\";\nimport { setWalletDetails } from \"../../redux/actions/login/loginAction\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport \"./EventWalletDetails.css\";\nimport emptyToken from \"./NLC_Empty.jpg\"\n\ntype MyProps = {\n  loginData: any;\n  initSysCheck: any;\n  systemCheck: any;\n  setWalletDetails: any;\n  form: any;\n};\ntype MyState = {\n  systemCheck: boolean;\n  displayName: string;\n  companyName: string;\n  designation: string;\n  showAvatarSelection: boolean;\n  tokens: Array<string>;\n  getToken: boolean;\n  selectedToken: string;\n  spawnIndex: string;\n};\n\nclass EventWalletDetails extends React.Component<MyProps, MyState> {\n  constructor(props: any) {\n    super(props);\n    let data = {};\n    let walletDetails: string = localStorage.getItem(\n      \"wallet-\" + this.props.loginData[\"walletAddress\"]\n    );\n    if (walletDetails && !walletDetails.endsWith(\"null\")) {\n      data = JSON.parse(walletDetails);\n    }\n    this.state = {\n      displayName: data[\"displayName\"],\n      companyName: data[\"companyName\"],\n      designation: data[\"designation\"],\n      systemCheck: false,\n      showAvatarSelection: false,\n      tokens: undefined,\n      getToken: true,\n      selectedToken: undefined,\n      spawnIndex: undefined\n    };\n  }\n\n  systemCheck = () => {\n    this.props.initSysCheck();\n  };\n\n  handleSubmit = (e: any) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err: any, values: any) => {\n      if (!err) {\n        values = {\n          ...this.state,\n        };\n        values[\"walletAddress\"] = this.props.loginData.walletAddress;\n        //values[\"savedWalletDetails\"] = true;\n        this.setState({showAvatarSelection: true});\n        let walletAddress = this.props.loginData.walletAddress;\n        let firstPart = walletAddress.substring(0, 5);\n        let lastPart = walletAddress.substring(\n          walletAddress.length - 5,\n          walletAddress.length\n        );\n        values[\"maskedWalletAddress\"] = firstPart + \"...\" + lastPart;\n        localStorage.setItem(\n          \"wallet-\" + this.props.loginData.walletAddress,\n          JSON.stringify(values)\n        );\n        this.props.setWalletDetails(values);\n      } else {\n      }\n    });\n  };\n\n  handleTokenSelect = (tokenId) => {\n    if(tokenId=='63054725577156053341048092405222664900733819093131058101971022255879782137861') {\n      this.props.setWalletDetails({\n        selectedToken: tokenId,\n        spawnIndex: \"2\",\n        savedWalletDetails: true\n      });\n    } else if (tokenId=='63054725577156053341048092405222664900733819093131058101971022254780270510100') {\n      this.props.setWalletDetails({\n        selectedToken: tokenId,\n        spawnIndex: \"1\",\n        savedWalletDetails: true\n      });\n    } else if (tokenId=='63054725577156053341048092405222664900733819093131058101971022253680758882404') {\n      this.props.setWalletDetails({\n        selectedToken: tokenId,\n        spawnIndex: \"0\",\n        savedWalletDetails: true\n      });\n    }\n  }\n\n  handleDisplayChange = (e) => {\n    this.setState({\n      displayName: e.target.value,\n    });\n  };\n\n  handleCompanyChange = (e) => {\n    this.setState({\n      companyName: e.target.value,\n    });\n  };\n\n  handleDesignationChange = (e) => {\n    this.setState({\n      designation: e.target.value,\n    });\n  };\n\n  createTokenElement = ({ name, collection, description, permalink, image_preview_url, token_id }) => {\n    const newElement = {\n      section: `${collection.slug}_${token_id}`,\n      name,\n      a: permalink,\n      img_url: image_preview_url,\n      description,\n      id: token_id\n    };\n  \n    return newElement\n  }\n\n  getTokens = () => {\n    if(this.state.getToken) {\n      let tok = undefined;\n      let ownerAddress=this.props.loginData[\"walletAddress\"];\n      fetch(\n        `https://testnets-api.opensea.io/api/v1/assets?owner=${ownerAddress}&order_direction=desc&offset=0&limit=30`,\n        { method: \"GET\", headers: { Accept: \"application/json\" } }\n      ).then(response => response.json()).then(({ assets }) => {\n        assets.forEach((attributes) => {\n          if(tok===undefined) {\n            tok = [];\n          }\n          if(attributes['token_id']=='63054725577156053341048092405222664900733819093131058101971022255879782137861'\n          ||attributes['token_id']=='63054725577156053341048092405222664900733819093131058101971022254780270510100'\n          ||attributes['token_id']=='63054725577156053341048092405222664900733819093131058101971022253680758882404') {\n            tok.push((this.createTokenElement(attributes)));   \n          }\n        });\n        this.setState({tokens: tok, getToken:false});\n      }).catch(err =>{\n      });\n    }\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    this.getTokens();\n    return (\n      <div\n        className=\"banner-item\"\n        style={{\n          backgroundImage: \"url(images/speakers/speaker_bg.png)\",\n        }}\n      >\n        <div className=\"speaker-shap\">\n          <img\n            className=\"shap1\"\n            src=\"images/shap/home_speaker_memphis1.png\"\n            alt=\"\"\n          />\n          <img\n            className=\"shap2\"\n            src=\"images/shap/home_speaker_memphis2.png\"\n            alt=\"\"\n          />\n        </div>\n        {!this.state.showAvatarSelection?(<div><div className=\"row\">\n          <div className=\"col-lg-8 mx-auto\">\n            <h2 className=\"section-title text-center\" style={{marginTop:'25px', marginBottom:'45px'}}>\n              Profile Details (Optional)\n            </h2>\n          </div>\n          {/* col end*/}\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-8 mx-auto\">\n              <Form\n                onSubmit={this.handleSubmit}\n                id=\"123\"\n                className=\"form-signin\"\n              >\n                <div className=\"\">\n                  <div className=\"form-info\">\n                    <Form.Item>\n                      {getFieldDecorator(\"displayName\", {\n                        rules: [\n                          {\n                            message: \"Please enter your display name\",\n                            required: false,\n                          },\n                          {\n                            max: 100,\n                            message:\n                              \"Display name should be accept maximum 35 characters\",\n                          },\n                          {\n                            message:\n                              \"Display name should be minimum 4 characters\",\n                            min: 4,\n                          },\n                        ],\n                      })(\n                        <div className=\"row\">\n                          <div className=\"col-md-6 mx-auto\">\n                            <div\n                              className=\"form-group\"\n                              style={{ marginBottom: \"6px\" }}\n                            >\n                              <Input\n                                className=\"form-control form-control-email\"\n                                placeholder=\"Display Name\"\n                                name=\"displayName\"\n                                id=\"displayName\"\n                                type=\"displayName\"\n                                value={this.state.displayName}\n                                onChange={this.handleDisplayChange}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </Form.Item>\n                  </div>\n                </div>\n                <div className=\"\">\n                  <div className=\"form-info\">\n                    <Form.Item>\n                      {getFieldDecorator(\"companyName\", {\n                        rules: [\n                          {\n                            message: \"Please enter your company name\",\n                            required: false,\n                          },\n                          {\n                            max: 100,\n                            message:\n                              \"Company name should be accept maximum 35 characters\",\n                          },\n                          {\n                            message:\n                              \"Company name should be minimum 4 characters\",\n                            min: 4,\n                          },\n                        ],\n                      })(\n                        <div className=\"row\">\n                          <div className=\"col-md-6 mx-auto\">\n                            <div\n                              className=\"form-group\"\n                              style={{ marginBottom: \"6px\" }}\n                            >\n                              <Input\n                                className=\"form-control form-control-email\"\n                                placeholder=\"Company Name\"\n                                name=\"companyName\"\n                                id=\"companyName\"\n                                type=\"companyName\"\n                                value={this.state.companyName}\n                                onChange={this.handleCompanyChange}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </Form.Item>\n                  </div>\n                </div>\n                <div className=\"\">\n                  <div className=\"form-info\">\n                    <Form.Item>\n                      {getFieldDecorator(\"designation\", {\n                        rules: [\n                          {\n                            message: \"Please enter your designation\",\n                            required: false,\n                          },\n                          {\n                            max: 100,\n                            message:\n                              \"Designation should be accept maximum 35 characters\",\n                          },\n                          {\n                            message:\n                              \"Designation should be minimum 4 characters\",\n                            min: 4,\n                          },\n                        ],\n                      })(\n                        <div className=\"row\">\n                          <div className=\"col-md-6 mx-auto\">\n                            <div\n                              className=\"form-group\"\n                              style={{ marginBottom: \"6px\" }}\n                            >\n                              <Input\n                                className=\"form-control form-control-email\"\n                                placeholder=\"Designation\"\n                                name=\"designation\"\n                                id=\"designation\"\n                                type=\"designation\"\n                                value={this.state.designation}\n                                onChange={this.handleDesignationChange}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </Form.Item>\n                  </div>\n                </div>\n                <div className=\"text-center\" style={{ color: \"red\" }}>\n                  {this.props.loginData.message}\n                </div>\n                <div className=\"text-center\">\n                  <br />\n                  <Button\n                    className=\"btn\"\n                    style={{\n                      color: \"white\",\n                      fontSize: \"16px\",\n                      fontWeight: 700,\n                      backgroundColor: \"#d20055\",\n                    }}\n                    htmlType=\"submit\"\n                  >\n                    Save &amp; Continue\n                  </Button>\n                </div>\n                <br></br>\n              </Form>\n            </div>\n          </div>\n        </div>\n        </div>):undefined}\n        {this.state.showAvatarSelection? (<div>\n          <div className=\"row\">\n          <div className=\"col-lg-8 mx-auto\">\n            <h2 className=\"section-title text-center\" style={{marginTop:'25px', marginBottom:'45px'}}>\n              Choose your Avatar (Your NLC NFTs should list here)\n            </h2>\n          </div>\n        </div>\n          <div className=\"App\">\n            {this.state.tokens?(this.state.tokens).map(token => (\n              <Card className=\"Card-new\">\n              <CardActionArea>\n                <CardMedia\n                  style={{ height: 260 }}\n                  image={token['img_url']}\n                  title=\"cardcontent\"\n                />\n                <CardContent style={{ padding: 0 }}>\n                  <p className=\"card-header1\">{token['name']}</p>\n                  <p\n                    style={{\n                      justifyContent: \"center\",\n                      textAlign: \"center\",\n                      color: \"#7C7887\",\n                      fontSize: \"15px\",\n                    }}\n                  >\n                    {token['description']}\n                  </p>\n                </CardContent>\n              </CardActionArea>\n              <CardActions\n                style={{\n                  display: \"flex\",\n                  gap: 10,\n                  justifyContent: \"center\",\n                  paddingTop: \"2%\",\n                }}\n              >\n                <button className=\"button2\"\n                      style={{\n                        color: \"white\",\n                        fontSize: \"16px\",\n                        fontWeight: 500,\n                        backgroundColor: \"#d20055\",\n                        height: \"35px\",\n                        border: \"none\"\n                      }} onClick={() =>this.handleTokenSelect(token['id'])}>Select</button>\n              </CardActions>\n            </Card>\n            )):(<div style={{color:'#000', zIndex: 9999, marginLeft: '10%'}}><p><img src={emptyToken} style={{height: '325px'}}></img></p>Looks like you don't have a valid NFT from NxtLandClub (NLC). Please visit and purchase a NLC NFT from our collection in <a href=\"https://testnets.opensea.io/collection/nxtlandclub\" target=\"_blank\">OpenSea</a></div>)}\n        </div></div>):undefined}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData,\n  systemCheck: state.systemCheck,\n});\n\nconst EventWalletDetailsForm = Form.create({ name: \"SysCheck\" })(\n  EventWalletDetails\n);\n\nexport default connect(mapStateToProps, {\n  initSysCheck,\n  setWalletDetails,\n})(EventWalletDetailsForm);\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { Row, Input, Form, Button, Layout, Alert, Select } from \"antd\";\nimport { connect } from \"react-redux\";\nimport EventNavbar from \"./EventNavbar\";\nimport {\n  loginAction,\n  logoutAction,\n  getMetaData,\n} from \"../../redux/actions/login/loginAction\";\nimport SystemCheck from \"./SystemCheck\";\nimport Calibaration from \"./Calibaration\";\nimport EventHome from \"./EventHome\";\nimport EventWebGL from \"./EventWebGL\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport Feedback from \"./Feedback\";\nimport EventWalletDetails from \"./EventWalletDetails\";\ntype MyProps = {\n  inmemoryLanguage: any;\n  logoutAction: any;\n  loginAction: any;\n  getMetaData: any;\n  loginData: any;\n  metaData: any;\n  form: any;\n  systemCheck: any;\n};\ntype MyState = {\n  captchaError: string;\n  language: string;\n};\nclass Event extends React.Component<MyProps, MyState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      captchaError: \"\",\n      language: \"en\",\n    };\n  }\n\n  renderRedirect = () => {\n    if (!this.props.loginData.redirect) {\n      return <Redirect to=\"/login\" />;\n    }\n  };\n\n  eventGLRedirect = () => {\n    if (this.props.metaData.isValidated) {\n      return <Redirect to=\"/eventGL\" />;\n    }\n  };\n\n  renderPage = () => {\n    if (this.props.loginData.walletAddress) {\n      if(this.props.loginData.savedWalletDetails) {\n        return <EventHome />;\n      } else {\n        return <EventWalletDetails />;\n      }\n    } else {\n      return <EventHome />;\n    }\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        <EventNavbar></EventNavbar>\n        {this.renderRedirect()}\n        {this.eventGLRedirect()}\n        <div className=\"body-inner\">\n          <div\n            id=\"page-banner-area\"\n            className=\"page-banner-area\"\n            style={{\n              backgroundImage: \"url(images/banner/leanr_bg.png)\",\n              minHeight: \"50px\",\n            }}\n          ></div>\n          {this.renderPage()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData,\n  metaData: state.metaData,\n  systemCheck: state.systemCheck,\n});\n\nconst LoginuserForm = Form.create({ name: \"Login\" })(Event);\n\nexport default connect(mapStateToProps, {\n  loginAction,\n  logoutAction,\n  getMetaData,\n})(LoginuserForm);\n","import React from \"react\";\nimport { Button, Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport {\n  initSysCheck,\n  webglLogout,\n} from \"../../redux/actions/systemCheck/systemCheckAction\";\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nimport EventNavbar from \"./EventNavbar\";\nimport { Redirect } from \"react-router-dom\";\nimport { Launcher } from \"react-chat-window\";\nimport {getChatData} from '../../redux/actions/systemCheck/systemCheckAction'\nimport axios from \"../../utils/leoAxios\";\n\nimport {config} from '../../config/configs'\ntype MyProps = {\n  loginData: any;\n  initSysCheck: any;\n  webglLogout: any;\n  systemCheck: any;\n  metaData: any;\n  handleClick: any;\n  hasOwnProperty: any;\n  isOpen: any;\n  getChatData: any;\n};\ntype MyState = {\n  webglLoaded: boolean;\n  dataSent: boolean;\n  showWebgl: boolean;\n  progress: any;\n  screenObj: any;\n  orientationChanged: boolean;\n  messageList: any;\n  isOpen: boolean;\n  chatConnected: boolean;\n};\n\nconst unityContent = new UnityContent(\n  \"/Build/public.json\",\n  \"/Build/UnityLoader.js\"\n);\n\nlet userObject = {};\nlet publishSocket = undefined;\nlet listenSocket = undefined;\nclass EventWebGL extends React.Component<MyProps, MyState> {\n\n  private tutorialVideo: React.RefObject<HTMLVideoElement>;\n\n  constructor(props: any) {\n    super(props);\n\n    this.tutorialVideo = React.createRef();\n\n    this.state = {\n      webglLoaded: false,\n      showWebgl: false,\n      dataSent: false,\n      progress: 0,\n      orientationChanged: false,\n      screenObj: \"\",\n      messageList: [],\n      isOpen: false,\n      chatConnected: false\n    };\n    var dataSent = false;\n    /* Listener for WebGL Logout */\n\n    unityContent.on(\"logout\", (score) => {\n      this.props.webglLogout();\n    });\n    userObject = {\n      name: this.props.loginData[\"userDetail\"][\"name\"],\n      eventID: \"eduigi2020\",\n      userID: this.props.loginData[\"emailId\"],\n      email:this.props.loginData[\"emailId\"],\n      gender: \"male\",\n      token: this.props.loginData[\"token\"],\n      mobile: this.mobCheck(),\n      profileUrl:this.props.loginData[\"userDetail\"]['profileUrl'],\n      spawnIndex: this.props.loginData['spawnIndex']?this.props.loginData['spawnIndex']:'0',\n      designation: 'Director, Techfully Inc'\n\n    };\n    /* Listener for Loaded */\n    unityContent.on(\"loaded_stalls\", (score) => {\n      this.setState({\n        webglLoaded: true,\n      });\n    });\n\n    /* Listener for Loaded */\n    unityContent.on(\"chatOn\", (exhibitorName, exhibitorId) => {\n      if(!this.state.chatConnected) {\n        this.props.getChatData(this.props.loginData.token, this.startWS);\n        this.setState({\n          chatConnected: true,\n          messageList: [...this.state.messageList, {\n            author: \"System\",\n            type: 'text',\n            data: { text: \"Welcome to our stall \"+ this.props.loginData.userDetail.name+\", \\n\\nPlease note our agent will connect with you. If you not got response in One min. Please share your query our team will call you shortly.\"}\n          }]\n        });\n      }\n      this.setState({\n        isOpen: true,\n      });\n    });\n\n    /* Listener for Loading completion on WebGL */\n    unityContent.on(\"progress\", (progression) => {\n      let walletDetails:string = localStorage.getItem(\"wallet-\"+this.props.loginData[\"walletAddress\"]);\n      if(walletDetails && !walletDetails.endsWith(\"null\")) {\n        let data = JSON.parse(walletDetails);\n        if(data[\"displayName\"]!==undefined) {\n          userObject[\"name\"] = data[\"displayName\"];\n          userObject[\"designation\"] = data[\"designation\"];\n        } else {\n          userObject[\"name\"] = this.props.loginData.maskedWalletAddress;  \n        }\n      } else if (this.props.loginData.walletAddress) {\n        userObject[\"name\"] = this.props.loginData.maskedWalletAddress;\n      }\n      if (progression * 100 === 100) {\n        if (true) {\n          unityContent.send(\n            \"BrowserCommunicationManager\",\n            \"login\",\n            JSON.stringify(userObject)\n          );\n        }\n      } else {\n        this.setState({\n          progress: progression * 100,\n        });\n      }\n    });\n    unityContent.on('brochure_download',(url)=>{\n      //console.log(url)\n  //       let link = document.createElement('a');\n  // link.href = `${url}`;\n  // document.body.appendChild(link);\n  // link.click();\n  // document.body.removeChild(link);\n      // if(url){\n      //   let fileName = url => url.substring(url.lastIndexOf('/') + 1)\n      //   try{\n      //     downloadFile(url,fileName)\n      //   }catch( err){\n      //     console.log(err)\n      //   }\n      // }\n    })\n    document.addEventListener(\"fullscreenerror\", () => {\n    });\n\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"beforeunload\", (ev) =>\n    {\n        axios.get(config.apiRootPath+config.logoutEvent,{headers:{\n          'Content-Type':'application/json',\n          'Authorization':`Bearer ${sessionStorage.getItem('accessToken')}`\n        }});\n        ev.preventDefault();\n        //return ev.returnValue = 'Are you sure you want to close?';\n    });\n  }\n\n  startPublishWS = url => {\n    publishSocket = new WebSocket(url + \"/messagereceive\");\n  }\n\n  startWS = (url) => {\n    if(!publishSocket) {\n      publishSocket = new WebSocket(url + \"/messagereceive\");\n    }\n    if(!listenSocket) {\n      listenSocket = new WebSocket(url + \"/messagepublish\");\n    }\n      listenSocket.onmessage = (event) => {\n        // When receiving a message append a div child to #messages\n        let data = JSON.parse(event.data);\n        if(data.from !== this.props.loginData.userDetail.name) {\n          this.setState({\n            messageList: [...this.state.messageList, {\n              author: data.from,\n              type: 'text',\n              data: { text: data.from+\":\\n\\n\"+data.msg }\n            }]\n          });\n        }\n      }\n\n      listenSocket.onclose = (event) => {\n        console.log(\"Disconnected from server!\");\n        if(this.state.isOpen) {\n          this.setState({\n            chatConnected: true\n          });\n          listenSocket = undefined;\n          this.startWS(this.props.systemCheck.chatUrl+this.props.systemCheck.exhibitorId);\n          console.log(\"Re-Connected to server\");\n        }\n      }\n\n      listenSocket.onopen = function(event){\n        console.log(\"Connected to server\");\n      }\n\n      publishSocket.onclose = (event) => {\n        console.log(\"Publish - Disconnected from server!\");\n        if(this.state.isOpen) {\n          this.setState({\n            chatConnected: true\n          });\n          publishSocket = undefined;\n          this.startWS(this.props.systemCheck.chatUrl+this.props.systemCheck.exhibitorId);\n          console.log(\"Publish - Re-Connected to server\");\n        }\n      }\n  }\n\n  loadData = () => {\n\n    //this.tutorialVideo.current.pause();\n    axios.post(config.apiRootPath+config.loginEvent,{mobile:this.mobCheck()},{headers:{\n      'Content-Type':'application/json',\n      'Authorization':`Bearer ${sessionStorage.getItem('accessToken')}`\n    }});\n    this.setState({\n      showWebgl: true,\n    });\n    let canvas = document.getElementsByTagName('canvas')[0]\n    canvas.height = 945;\ncanvas.style.width  = '100%';\ncanvas.style.height = '100%';\n  };\n  mobCheck = () => {\n    let check = false;\n    (function (a) {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      )\n        check = true;\n    })(navigator.userAgent || navigator.vendor);\n    return check;\n  };\n  renderRedirect = () => {\n    if (this.props.systemCheck[\"webglLogout\"]) {\n      return <Redirect to=\"/feedback\" />;\n    }\n  };\n\n  eventRedirect = () => {\n    if (!this.props.systemCheck.isValidated) {\n      return <Redirect to=\"/event\" />;\n    }\n  };\n  requestFullscreen = (element) => {\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullScreen) {\n      element.webkitRequestFullScreen();\n    }\n  };\n  orientationCheck = () => {\n    let fullscreenEnabled = document.fullscreenEnabled;\n    if (this.mobCheck() && !this.state.orientationChanged) {\n      this.requestFullscreen(document.documentElement);\n      //screen.orientation.lock(\"landscape\");\n      this.setState({ orientationChanged: true });\n    }\n   // this.requestFullscreen(document.documentElement);\n  };\n\n  _onMessageWasSent(message) {\n    let d = new Date();\n      var data = {\n      from: this.props.loginData.userDetail.name,\n      to: this.props.systemCheck.exhibitorId,\n      msg: (message.type===\"text\"?message.data.text:message.data.emoji),\n      timestamp: d.getHours() +\":\"+ d.getMinutes() + \":\" + d.getSeconds()\n      };\n      if(publishSocket) {\n        // Send the msg object as a JSON-formatted string.\n        publishSocket.send(JSON.stringify(data));\n        this.setState({\n          messageList: [...this.state.messageList, message]\n        })\n      } else {\n        this.setState({\n          messageList: [...this.state.messageList, message]\n        })\n      }\n  }\n\n  handleClick() {\n    if (this.props.handleClick !== undefined) {\n      this.props.handleClick();\n    } else {\n      unityContent.send(\n        \"BrowserCommunicationManager\",\n        \"chatOff\",\n        JSON.stringify(userObject)\n      );\n      this.setState({\n        isOpen: !this.state.isOpen,\n        messageList: [],\n        chatConnected: false\n      });\n      publishSocket = undefined;\n      listenSocket = undefined;\n    }\n  }\n\n  render() {\n    const isOpen = this.props.hasOwnProperty(\"isOpen\")\n      ? this.props.isOpen\n      : this.state.isOpen;\n    return (\n      <div>\n        {this.orientationCheck()}\n        {this.renderRedirect()}\n        {this.eventRedirect()}\n        <div style={{zIndex: 99999}}>\n          <Launcher\n            agentProfile={{\n              teamName: this.props.systemCheck.exhibitorName,\n              imageUrl:\n                \"https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png\",\n            }}\n            onMessageWasSent={this._onMessageWasSent.bind(this)}\n            messageList={this.state.messageList}\n            showEmoji\n            isOpen={isOpen}\n            handleClick={this.handleClick.bind(this)}\n          />\n        </div>\n        <div>\n          <div>\n            <div\n              style={{\n                display: this.state.showWebgl ? \"none\" : \"\",\n                maxWidth: \"100%\",\n              }}\n              className=\"container\"\n            >\n              <EventNavbar></EventNavbar>\n              <br></br>\n              <br></br>\n              <br></br>\n              <div className=\"row\">\n                {/* <div className=\"col-lg-8 col-sm-9\">\n                  <video ref={this.tutorialVideo} width=\"100%\" autoPlay loop>\n                    <source src=\"/tutorial.mp4\" type=\"video/mp4\" />\n                  </video>\n                </div> */}\n                <div className=\"col-lg-12 col-sm-12 mx-auto text-center\">\n                  <div\n                    className=\"col-lg-12 col-sm-12\"\n                    style={{\n                      display: this.state.webglLoaded ? \"none\" : \"\",\n                    }}\n                  >\n                    <h2 className=\"section-title1 text-center\" style={{fontSize: '4vw'}}>\n                      <img\n                        alt=\"3\"\n                        src=\"./images/loading.gif\"\n                        style={{ height: \"10vw\" }}\n                      />\n                      <br></br>\n                      {parseInt(this.state.progress)}% Loading...\n                      <span style={{ marginTop: \"20px\", fontSize: '1vw' }}>\n                        Please be patient! It might take few minutes depending on your network speed. We are getting\n                        everything ready for your virtual experience!\n                      </span>\n                    </h2>\n                  </div>\n                  <div\n                    className=\"col-lg-6 col-sm-12 col-md-6 mx-auto\"\n                    style={{\n                      display: this.state.webglLoaded ? \"\" : \"none\",\n                      paddingTop: \"80px\",\n                    }}\n                  >\n                    <h2 className=\"text-center\">\n                      <Button\n                        onClick={this.loadData}\n                        href=\"#\"\n                        className=\"btn\"\n                        style={{\n                          backgroundImage:\n                            \"url('\" + \"/images/start_btn.png\" + \"')\",\n                          backgroundSize: \"130px 130px\",\n                          backgroundRepeat: \"no-repeat\",\n                          color: \"white\",\n                          fontSize: \"16px\",\n                          fontWeight: 700,\n                          paddingTop: \"15%\",\n                          width: \"130px\",\n                          height: \"130px\",\n                          borderRadius: \"50%\",\n                        }}\n                      ></Button>\n                    </h2>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div style={{ display: this.state.showWebgl ? \"\" : \"none\" }}>\n              <Unity unityContent={unityContent}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData,\n  systemCheck: state.systemCheck,\n  metaData: state.metaData,\n});\n\nconst EventWebGLForm = Form.create({ name: \"SysCheck\" })(EventWebGL);\n\nexport default connect(mapStateToProps, {\n  initSysCheck,\n  webglLogout, getChatData\n})(EventWebGLForm);\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport EventNavbar from \"../exhiTemplate/EventNavbar\";\nimport { loadDashboard } from \"../../redux/actions/dashboard/dashboardActions\";\n\ntype MyProps = {\n  dashboard: any;\n  loadDashboard: any;\n};\nlet cards = [\n  {\n    name: \"Users\",\n    values: 123,\n  },\n  {\n    name: \"Users\",\n    values: 123,\n  },\n  {\n    name: \"Users\",\n    values: 123,\n  },\n  {\n    name: \"Users\",\n    values: 123,\n  },\n  {\n    name: \"Users\",\n    values: 123,\n  },\n  {\n    name: \"Users\",\n    values: 123,\n  },\n];\nclass Dashboard extends React.Component<MyProps, {}> {\n  componentDidMount() {\n    this.props.loadDashboard();\n  }\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <EventNavbar></EventNavbar>\n\n        <div className=\"body-inner\">\n          <div\n            id=\"page-banner-area\"\n            className=\"page-banner-area\"\n            style={{\n              backgroundImage: \"url(images/banner/leanr_bg.png)\",\n              minHeight: \"70px\",\n            }}\n          ></div>\n          <div\n            className=\"banner-item overlay\"\n            style={{ backgroundColor: \"#110b29\", minHeight: \"720px\" }}\n          >\n            <div className=\"container\" style={{paddingTop:'40px'}}>\n              <div>\n                <div className=\"row\">\n                  {this.props.dashboard.summary.length > 0 ? (\n                    this.props.dashboard.summary.map((card) => {\n                      return (\n                        <div\n                          className=\"col-md-3 card\"\n                          style={{\n                            textAlign: \"center\",\n                            backgroundColor: \"white\",\n                            margin: \"8px\",\n                          }}\n                        >\n                          <h4>{card.name}</h4>\n                          <hr />\n                          <p>{card.value}</p>\n                        </div>\n\n                        // <div className=\"card\" style={{ textAlign: \"center\" }}>\n                        //   {card.name}\n                        //   <div className=\"container\">\n                        //     <h4>{card.value}</h4>\n                        //   </div>\n                        // </div>\n                      );\n                    })\n                  ) : (\n                    <span />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  dashboard: state.dashboard,\n});\n\nexport default connect(mapStateToProps, { loadDashboard })(Dashboard);\n","import { LOAD_DASHBOARD,LOAD_EVENTS,CONFIGURE_EVENT } from \"../types\";\nimport axios from \"../../../utils/leoAxios\";\n\nimport { config } from \"../../../config/configs\";\n\nexport const loadDashboard = (values: any) => (dispatch: any) => {\n  axios\n    .get(config.apiRootPath + config.loadDashboard, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\":'Bearer '+sessionStorage.getItem('accessToken')\n      },\n    })\n    .then((res: any) => {\n      if (res.data.success) {\n        let { summary } = res.data;\n        dispatch({\n          payload: summary,\n          type: LOAD_DASHBOARD,\n        });\n      }\n    });\n};\n\n\nexport const loadEvents =  (values:any) => (dispath:any)=>{\n  // axios.get(config.eventConfigurationBaseURL+config.getEvents,{\n  //   headers:{\n  //     'Content-Type':'application/json'\n  //   }\n  // }).then((res:any)=>{\n  //   console.log(res)\n  //   if(res.data.success){\n  //     console.log(res.data)\n  //     let {events} = res.data;\n  //     dispath({\n  //       payload:events,\n  //       type:LOAD_EVENTS\n  //     })\n  //   }\n  // })\n\n  fetch(config.eventConfigurationBaseURL+config.getEvents).then(res=>res.json()).then((data)=>{\n    if(data.status){\n      let {events} = data;\n      dispath({\n        payload:events,\n        type:LOAD_EVENTS\n      })\n    }\n  })\n}\n\nexport const configureEvent = (values:any) => (dispatch:any)=>{\n  let {eventId,events} = values\n  let event = events.filter((x:any)=>{ return x.eventId== eventId})[0]\n  fetch(config.eventConfigurationBaseURL+'getExhibitors'+'/'+eventId).then(data=>data.json()).then(response=>{\n    let {exhibitors} = response;\n    dispatch({\n      payload:{name:'eduFair2022',event,exhibitors},\n      type:CONFIGURE_EVENT\n    })\n  })\n  \n}\n\nexport const loadAdminDashboard = (values: any) => (dispatch: any) => {\n  axios\n    .get(config.apiRootPath + config.loadAdminDashboard, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\":'Bearer '+sessionStorage.getItem('accessToken')\n      },\n    })\n    .then((res: any) => {\n      if (res.data.success) {\n        let { summary } = res.data;\n        dispatch({\n          payload: summary,\n          type: LOAD_DASHBOARD,\n        });\n      }\n    });\n};","import React, { Component } from \"react\";\nimport { Button, Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport {initSysCheck} from '../../redux/actions/systemCheck/systemCheckAction'\nimport ReactStars from \"react-rating-stars-component\";\nimport { Input } from 'antd';\nimport {config} from '../../config/configs'\nimport axios from \"../../utils/leoAxios\";\n\nimport {\n  FacebookShareButton,\n  WhatsappShareButton,\n  TwitterShareButton,\n\n  FacebookIcon,\n  WhatsappIcon,\n  TwitterIcon,\n} from 'react-share'\n\ntype MyProps = {\n  loginData: any;\n  initSysCheck: any;\n};\ntype MyState = {\n  feedback: boolean;\n  feedbackText: string;\n  rating: string\n};\nconst { TextArea } = Input;\n\nclass Feedback extends React.Component<MyProps, MyState> {\n  constructor(props:any) {\n    super(props);\n    this.state = {\n      feedback: false,\n      feedbackText: '',\n      rating: ''\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"beforeunload\", (ev) =>\n    {\n        ev.preventDefault();\n        return ev.returnValue = 'Are you sure you want to close?';\n    });\n  }\n\n  submitFeedback = () => {\n    this.setState({feedback: true});\n    axios.post(config.apiRootPath+config.feedbackUrl,{feedback:this.state.feedbackText,rating:this.state.rating},{headers:{\n      'Content-Type':'application/json',\n      'Authorization':`Bearer ${sessionStorage.getItem('accessToken')}`\n    }}).then(()=>{\n\n    })\n  };\n\n  ratingChanged = (newRating) => {\n    this.setState({\n      rating: newRating\n    })\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      feedbackText: e.target.value\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"banner-content-wrap text-center\" style={{paddingTop: '75px'}}>\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-sm-6 col-md-6 mx-auto\" style={{height: '300px'}}>\n            {this.state.feedback?(\n              <h2 className=\"section-title1 text-center\">\n                Thank you for your feedback!\n              </h2>\n            ):(\n              <h2 className=\"section-title1 text-center\">\n              Feedback\n              <span className=\"centerStar\">\n              <ReactStars\n                count={5}\n                onChange={this.ratingChanged}\n                size={50}\n                activeColor=\"#ffd700\"\n              />\n              <TextArea\n                style={{width: '100%', height: '120px'}}\n                value={this.state.feedbackText}\n                onChange={this.handleChange}\n                rows={4} />\n              </span>\n              {this.state.feedback?(undefined):(\n          <div>\n          <Button\n            onClick={this.submitFeedback}\n            href=\"#\"\n            className=\"btn\"\n            style={{\n              backgroundColor: \"#ff007a\",\n              color: \"white\",\n              fontSize: \"16px\",\n              fontWeight: 700,\n              padding: \"15px\",\n              width: \"100px\",\n            }}\n          >\n            Submit\n          </Button>\n          <br></br>\n          \n          </div>\n        )}\n            </h2>\n            )}\n            \n          </div>\n          {/* col end*/}\n          <div className=\"col-lg-8 col-sm-6 col-md-6 mx-auto\">\n          <div style={{marginTop: '20px'}} >\n          <h2 className=\"btn--shockwave is-active\">Share, Refer and Win!</h2>\n          <FacebookShareButton\n            className=\"network__share-button\"\n            url={\"www.eduigi.com\"}\n            quote={\"World's first Open Metaverse platform - NxtLand. Use referal code '\"+(this.props.loginData['userDetail']!==undefined?(\"\"+this.props.loginData['userDetail']['referralCode']).toUpperCase():undefined)+\"' while registering and get a chance to win exciting gifts!\"+\n          \"HURRY! Only 2 days left #nxtlandclub #metaverse #virtualland @nxtland.io\"}\n            style={{marginTop: '200px;'}}\n            >\n              <FacebookIcon\n                size={50}\n              />\n          </FacebookShareButton>\n\n          <WhatsappShareButton\n            url={\"www.eduigi.com\"}\n            title={\"India's first Virtual Education Expo - Blacksheep's EDUIGI. Use referal code '\"+(this.props.loginData['userDetail']!==undefined?(\"\"+this.props.loginData['userDetail']['referralCode']).toUpperCase():undefined)+\"' while registering and get a chance to win exciting gifts!\"+\n            \"HURRY! Only 2 days left #Blacksheepeduigi #eduigi #virtualexpo @livfair.event\"}\n          >\n            <WhatsappIcon\n                size={50}\n              />\n          </WhatsappShareButton>\n\n          <TwitterShareButton url={\"www.eduigi.com\"}\n            title={\"India's first Virtual Education Expo - Blacksheep's EDUIGI. Use referal code '\"+(this.props.loginData['userDetail']!==undefined?(\"\"+this.props.loginData['userDetail']['referralCode']).toUpperCase():undefined)+\"' while registering and get a chance to win exciting gifts!\"+\n            \"HURRY! Only 2 days left #Blacksheepeduigi #eduigi #virtualexpo @livfair.event\"}>\n            <TwitterIcon size={50}></TwitterIcon>\n          </TwitterShareButton>\n\n</div>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData\n});\n\nconst FeedbackForm = Form.create({ name: \"SysCheck\" })(Feedback);\n\nexport default connect(mapStateToProps, {\n  initSysCheck\n})(FeedbackForm);\n","import React, { Component } from \"react\";\nimport { Button, Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { initSysCheck } from \"../../redux/actions/systemCheck/systemCheckAction\";\nimport SystemCheck from \"./SystemCheck\";\nimport Feedback from \"./Feedback\";\nimport EventNavbar from \"./EventNavbar\";\n\ntype MyProps = {\n  loginData: any;\n  initSysCheck: any;\n  systemCheck: any;\n};\ntype MyState = {\n  systemCheck: boolean;\n};\n\nclass EventFeedback extends React.Component<MyProps, MyState> {\n  systemCheck = () => {\n    this.props.initSysCheck();\n  };\n\n  render() {\n    return (\n      <div>\n      `<EventNavbar></EventNavbar>\n      <div\n        className=\"banner-item\"\n        style={{\n          backgroundImage: \"url(images/speakers/speaker_bg.png)\",\n        }}\n      >\n        <div className=\"speaker-shap\">\n          <img\n            className=\"shap1\"\n            src=\"images/shap/home_speaker_memphis1.png\"\n            alt=\"\"\n          />\n          <img\n            className=\"shap2\"\n            src=\"images/shap/home_speaker_memphis2.png\"\n            alt=\"\"\n          />\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-11 mx-auto\">\n              <Feedback></Feedback>\n            </div>\n          </div>\n        </div>\n      </div>`\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData,\n  systemCheck: state.systemCheck\n});\n\nconst EventFeedbackForm = Form.create({ name: \"SysCheck\" })(EventFeedback);\n\nexport default connect(mapStateToProps, {\n  initSysCheck,\n})(EventFeedbackForm);\n","import {\n  RESET_FAILED,\n  RESET_SUCCESS,\n  OTP_RESET_SUCCESS,\n  OTP_RESET_FAILED,\n  RESET_VALUES\n} from \"../types\";\nimport axios from \"../../../utils/leoAxios\";\nimport { config } from \"../../../config/configs\";\n\nexport const resetValues = () => (dispatch: any) => {\n  dispatch({\n    payload: {},\n    type: RESET_VALUES,\n  });\n}\n\nexport const resetAction = (values: any) => (dispatch: any) => {\n  let payload = { ...values };\n  axios\n    .post(config.apiRootPath + config.resetURL, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((res: any) => {\n      if (res.success == false) {\n        dispatch({ payload: {isResetPassword: false}, resetErrorMessage: \"Server busy, please try again later\", type: RESET_FAILED });\n      } else {\n        dispatch({\n          payload: { ...values, resetErrorMessage: \"\", isResetPassword: true, ...res },\n          type: RESET_SUCCESS,\n        });\n      }\n    }).catch((err:any) => {\n      let errorMessage = \"Server Error. Try again after sometime\";\n      if(err.response) {\n        errorMessage = err.response.data;\n      }\n      dispatch({ payload: {resetErrorMessage: errorMessage['message']['userMessage']}, type: OTP_RESET_FAILED });\n    });\n};\n\nexport const validateOTP = (values: any) => (dispatch: any) => {\n  let payload = { ...values };\n  axios\n    .post(config.apiRootPath + config.resetPassword, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((res: any) => {\n      if (res.data.success == true) {\n        dispatch({\n          type: OTP_RESET_SUCCESS,\n          payload: {\n            ...values,\n            ...res.data,\n            otpValidated: true,\n            otpErrorMessage: \"\",\n          },\n        });\n      } else {\n        dispatch({\n          type: OTP_RESET_FAILED,\n          payload: {\n            ...values,\n            ...res.data,\n            otpValidated: false,\n            otpErrorMessage: \"Please try again\",\n          },\n        });\n      }\n    }).catch((err:any) => {\n      let errorMessage = \"Server Error. Try again after sometime\";\n      if(err.response) {\n        errorMessage = err.response.data;\n      }\n      dispatch({ payload: {otpErrorMessage: errorMessage['message']['userMessage']}, type: OTP_RESET_FAILED });\n    });\n};\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport {\n  resetAction,\n  validateOTP,\n  resetValues\n} from \"../../redux/actions/login/ResetAction\";\nimport {\n  Form,\n  Select,\n} from \"antd\";\nimport { connect } from \"react-redux\";\nimport Navbar from \"./Navbar\";\nimport { toast } from \"react-toastify\";\n\nconst { Option } = Select;\nconst recaptchaRef = React.createRef();\ntype MyProps = {\n  inmemoryLanguage: any;\n  resetAction: any;\n  loginData: any;\n  resetStatus: any;\n  validateOTP: any;\n  resetValues: any;\n  form: any;\n};\ntype MyState = {\n  captchaError: string;\n  language: string;\n  formValue: any;\n};\nclass ResetPassword extends Component<MyProps, MyState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      captchaError: \"\",\n      language: \"en\",\n      formValue: {},\n    };\n  }\n\n  componentDidMount() {\n    this.props.resetValues();\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"captcha error\");\n  };\n\n  onChange = (value) => {\n    console.log(\"Captcha value:\", value);\n  };\n\n  customScoreValidator = (value) => {\n    this.props.form.setFields({\n      score: {\n        value,\n        errors: [new Error(\"Invalid input\")],\n      },\n    });\n  };\n  returnNumber = (number: number) => {\n    return number;\n  };\n  renderRedirect = () => {\n    if (this.props.resetStatus.otpValidated) {\n      return <Redirect to=\"/login\" />;\n    }\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        <Navbar></Navbar>\n        {this.renderRedirect()}\n\n        <div className=\"body-inner\">\n          <div\n            id=\"page-banner-area\"\n            className=\"page-banner-area\"\n            style={{\n              backgroundImage: \"url(images/hero_area/banner_bg.jpg)\",\n              minHeight: \"90px\",\n            }}\n          ></div>\n          {/* Page Banner end */}\n          <section className=\"ts-contact-form\" style={{ padding: \"30px\" }}>\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-8 mx-auto\">\n                  <h2\n                    className=\"section-title text-center\"\n                    style={{ marginBottom: \"20px\" }}\n                  >\n                    Reset Password\n                  </h2>\n                </div>\n                {/* col end*/}\n              </div>\n\n              <Formik\n                initialValues={{\n                  userId: \"\",\n                }}\n                validate={(values) => {\n                  const errors: any = {};\n                  let requiredFields = [\n                    \"userId\",\n                  ];\n                  if (!values.userId) {\n                    errors.email = \"Required\";\n                  } else if (\n                    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\n                      values.userId\n                    )\n                  ) {\n                    errors.userId = \"Invalid email address\";\n                  }\n                  return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                  this.props.resetAction(values);\n                  this.setState({\n                    formValue: values,\n                  });\n                  setSubmitting(false);\n                }}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting,\n                  /* and other goodies */\n                }) => (\n                  <form\n                    onSubmit={handleSubmit}\n                    style={{\n                      display: this.props.resetStatus.isResetPassword\n                        ? \"none\"\n                        : \"contents\",\n                    }}\n                  >\n                    <div className=\"row\" style={{justifyContent: 'center'}}>\n                      <div className=\"col-md-12 col-lg-6\">\n                        <label className=\"required\">Enter your User ID / Email ID</label>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"email\"\n                            name=\"userId\"\n                            className=\"form-control\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.userId}\n                          />\n                          <span style={{ color: \"red\" }}>\n                            {errors.userId &&\n                              touched.userId &&\n                              errors.userId}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\" style={{ justifyContent: \"center\" }}>\n                      <span style={{ color: \"red\" }}>\n                        {this.props.resetStatus.resetErrorMessage}\n                      </span>\n                    </div>\n                    <div className=\"row\">\n                      <div\n                        className=\"col-md-12\"\n                        style={{ textAlign: \"center\" }}\n                      >\n                        <button\n                          type=\"submit\"\n                          disabled={isSubmitting}\n                          className=\"register-button\"\n                        >\n                          Get OTP\n                        </button>\n                      </div>\n                    </div>\n                  </form>\n                )}\n              </Formik>\n              <Formik\n                initialValues={{\n                  otp: \"\",\n                  userId: this.state.formValue.userId,\n                  sessionId: this.props.resetStatus.otpSessionId,\n                  password: \"\",\n                }}\n                validate={(values) => {\n                  const errors: any = {};\n                  let requiredFields = [\"otp\", \"password\"];\n                  let otpPattern = /^[0-9]{6}$/;\n                  if (!otpPattern.test(values.otp)) {\n                    errors.otp = \"Invalid input\";\n                  }\n                  requiredFields.map((f) => {\n                    if (!values[f]) {\n                      errors[f] = \"Required\";\n                    }\n                  });\n                  return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                  this.props.validateOTP({\n                    ...values,\n                    userId: this.props.resetStatus.userId,\n                    sessionId: this.props.resetStatus.data.otpSessionId,\n                  });\n                  setSubmitting(false);\n                }}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting,\n                  /* and other goodies */\n                }) => (\n                  <form\n                    onSubmit={handleSubmit}\n                    style={{\n                      display: !this.props.resetStatus.isResetPassword\n                        ? \"none\"\n                        : \"contents\",\n                    }}\n                  >\n                    <div className=\"row\" style={{ justifyContent: \"center\" }}>\n                      <div className=\"col-md-12 col-lg-6\">\n                        <label className=\"required\">Enter OTP</label>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"text\"\n                            name=\"otp\"\n                            className=\"form-control\"\n                            maxLength={this.returnNumber(6)}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.otp}\n                          />\n                          <span style={{ color: \"red\" }}>\n                            {errors.otp && touched.otp && errors.otp}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\" style={{ justifyContent: \"center\" }}>\n                      <div className=\"col-md-6 col-lg-6\">\n                        <label className=\"required\">Password</label>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"password\"\n                            name=\"password\"\n                            className=\"form-control\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                          />\n                          <span style={{ color: \"red\" }}>\n                            {errors.password &&\n                              touched.password &&\n                              errors.password}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\" style={{ justifyContent: \"center\" }}>\n                      <span style={{ color: \"red\" }}>\n                        {this.props.resetStatus.otpErrorMessage}\n                      </span>\n                    </div>\n                    <div className=\"row\">\n                      <div\n                        className=\"col-md-12\"\n                        style={{ textAlign: \"center\" }}\n                      >\n                        <button\n                          type=\"submit\"\n                          disabled={isSubmitting}\n                          className=\"register-button\"\n                        >\n                          Update Password\n                        </button>\n                      </div>\n                    </div>\n                  </form>\n                )}\n              </Formik>\n            </div>\n          </section>\n          {/* ts footer area start*/}\n\n          {/* ts footer area end*/}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData,\n  metaData: state.metaData,\n  resetStatus: state.resetStatus,\n});\nconst mapDispatchToProps = {\n  resetAction,\n  validateOTP,\n  resetValues\n};\nconst resetPasswordForm = Form.create({ name: \"ResetPassword\" })(ResetPassword);\n\nexport default connect(mapStateToProps, {\n  resetAction,\n  validateOTP,\n  resetValues\n})(resetPasswordForm);\n","import React from 'react'\r\nimport { Field,FieldArray, reduxForm } from 'redux-form'\r\nimport { connect } from \"react-redux\";\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input {...input} type={type} placeholder={label} style={{width:'100%',borderRadius:'4px',border:'0.5px solid grey'}} />\r\n      {touched && error && <span>{error}</span>}         \r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst renderMedia = ({ fields, meta: { touched, error, submitFailed } }) => (\r\n  <ul style={{listStyle:'none'}}>\r\n    <li>\r\n      <button type=\"button\" onClick={() => fields.push({})}>Add Media</button>\r\n      {(touched || submitFailed) && error && <span>{error}</span>}\r\n    </li>\r\n    {fields.map((media, index) => (\r\n      <li key={index}>\r\n        <button\r\n          type=\"button\"\r\n          title=\"Remove Media\"\r\n          onClick={() => fields.remove(index)}\r\n        />\r\n        <h4 style={{color:'white'}}>Media #{index + 1}</h4>\r\n        <Field\r\n          name={`${media}.name`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Name\"\r\n        />\r\n        <Field\r\n          name={`${media}.url`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"URL\"\r\n        />\r\n        <Field\r\n          name={`${media}.type`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Type\"\r\n        />\r\n        <Field\r\n          name={`${media}.category`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Category\"\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst renderSpotlight = ({ fields, meta: { touched, error, submitFailed } }) => (\r\n  <ul style={{listStyle:'none'}}>\r\n    <li>\r\n      <button type=\"button\" onClick={() => fields.push({})}>Add Spotlight</button>\r\n      {(touched || submitFailed) && error && <span>{error}</span>}\r\n    </li>\r\n    {fields.map((media, index) => (\r\n      <li key={index}>\r\n        <button\r\n          type=\"button\"\r\n          title=\"Remove Media\"\r\n          onClick={() => fields.remove(index)}\r\n        />\r\n        <h4 style={{color:'white'}}>Spotlight #{index + 1}</h4>\r\n        <Field\r\n          name={`${media}.name`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Name\"\r\n        />\r\n        <Field\r\n          name={`${media}.description`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Description\"\r\n        />\r\n        <Field\r\n          name={`${media}.url`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"URL\"\r\n        />\r\n        <Field\r\n          name={`${media}.type`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Type\"\r\n        />\r\n        <Field\r\n          name={`${media}.category`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Category\"\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst EventConfigForm = props => {\r\n  const { handleSubmit, pristine, reset, submitting } = props\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field\r\n        name=\"name\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Event Name\"\r\n      />\r\n      <Field\r\n        name=\"eventId\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Event ID\"\r\n      />\r\n      <Field\r\n        name=\"type\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Event Type\"\r\n      />\r\n      <Field\r\n        name=\"description\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Description\"\r\n      />\r\n      <Field\r\n        name=\"logo\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Logo URL\"\r\n      />\r\n      <Field\r\n        name=\"tagline\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Event Tagline\"\r\n      />\r\n      <Field\r\n        name=\"layout.layoutName\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Layout Name\"\r\n      />\r\n      <Field\r\n        name=\"layout.noOfBooths\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"No of Booths\"\r\n      />\r\n      <FieldArray name=\"metadata.media\" component={renderMedia}/>\r\n      <FieldArray name=\"activities.spotlight\" component={renderSpotlight}/>\r\n      <div>\r\n        <button type=\"submit\" disabled={pristine || submitting}>\r\n          Submit\r\n        </button>\r\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n         Reset\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dashboard: state.dashboard,\r\n  initialValues : state.dashboard.initialValues\r\n});\r\nconst eventForm = reduxForm({\r\n  form: 'simple' ,\r\n  enableReinitialize:true\r\n})(EventConfigForm)\r\n\r\nexport default connect(mapStateToProps)(eventForm)\r\n","import React from 'react'\r\nimport { Field,FieldArray, reduxForm } from 'redux-form'\r\nimport { connect } from \"react-redux\";\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input {...input} type={type} placeholder={label} style={{width:'100%',borderRadius:'4px',border:'0.5px solid grey'}} />\r\n      {touched && error && <span>{error}</span>}         \r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst renderMedia = ({ fields, meta: { touched, error, submitFailed } }) => (\r\n  <ul style={{listStyle:'none'}}>\r\n    <li>\r\n      <button type=\"button\" onClick={() => fields.push({})}>Add Media</button>\r\n      {(touched || submitFailed) && error && <span>{error}</span>}\r\n    </li>\r\n    {fields.map((media, index) => (\r\n      <li key={index}>\r\n        <button\r\n          type=\"button\"\r\n          title=\"Remove Media\"\r\n          onClick={() => fields.remove(index)}\r\n        />\r\n        <h4 style={{color:'white'}}>Media #{index + 1}</h4>\r\n        <Field\r\n          name={`${media}.name`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Name\"\r\n        />\r\n        <Field\r\n          name={`${media}.url`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"URL\"\r\n        />\r\n        <Field\r\n          name={`${media}.type`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Type\"\r\n        />\r\n        <Field\r\n          name={`${media}.category`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Category\"\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst renderAmenties = ({ fields, meta: { touched, error, submitFailed } }) => (\r\n    <ul style={{listStyle:'none'}}>\r\n      <li>\r\n        <button type=\"button\" onClick={() => fields.push({})}>Add Amenity</button>\r\n        {(touched || submitFailed) && error && <span>{error}</span>}\r\n      </li>\r\n      {fields.map((media, index) => (\r\n        <li key={index}>\r\n          <button\r\n            type=\"button\"\r\n            title=\"Remove Amenity\"\r\n            onClick={() => fields.remove(index)}\r\n          />\r\n          <h4 style={{color:'white'}}>Amenity #{index + 1}</h4>\r\n          <Field\r\n            name={`${media}.name`}\r\n            type=\"text\"\r\n            component={renderField}\r\n            label=\"Name\"\r\n          />\r\n          <Field\r\n            name={`${media}.type`}\r\n            type=\"text\"\r\n            component={renderField}\r\n            label=\"Type\"\r\n          />\r\n          <Field\r\n            name={`${media}.source`}\r\n            type=\"text\"\r\n            component={renderField}\r\n            label=\"Source\"\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n  \r\n\r\n\r\nconst renderBooths = ({ fields, meta: { touched, error, submitFailed } }) => (\r\n  <ul style={{listStyle:'none'}}>\r\n    <li>\r\n      <button type=\"button\" onClick={() => fields.push({})}>Add Booth</button>\r\n      {(touched || submitFailed) && error && <span>{error}</span>}\r\n    </li>\r\n    {fields.map((media, index) => (\r\n      <li key={index}>\r\n        <button\r\n          type=\"button\"\r\n          title=\"Remove Booth\"\r\n          onClick={() => fields.remove(index)}\r\n        />\r\n        <h4 style={{color:'white'}}>Booth #{index + 1}</h4>\r\n        <Field\r\n          name={`${media}.id`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"ID\"\r\n        />\r\n        <Field\r\n          name={`${media}.subvenue`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Sub Venue\"\r\n        />\r\n        <Field\r\n          name={`${media}.number`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"number\"\r\n        />\r\n        <Field\r\n          name={`${media}.type`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Type\"\r\n        />\r\n        <Field\r\n          name={`${media}.model`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Model\"\r\n        />\r\n              <FieldArray name=\"amenities\" component={renderAmenties}/>\r\n\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst ExibitorConfigForm = props => {\r\n  const { handleSubmit, pristine, reset, submitting } = props\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field\r\n        name=\"name\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Event Name\"\r\n      />\r\n      <Field\r\n        name=\"description\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Description\"\r\n      />\r\n      <Field\r\n        name=\"eventId\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Event ID\"\r\n      />\r\n      <Field\r\n        name=\"phoneNo\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Phone Number\"\r\n      />\r\n      <Field\r\n        name=\"emailId\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Email ID\"\r\n      />\r\n      <Field\r\n        name=\"logo\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Logo URL\"\r\n      />\r\n      <Field\r\n        name=\"exhibitorId\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Exhibitor Id\"\r\n      />\r\n      <Field\r\n        name=\"website\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Website URL\"\r\n      />\r\n      <Field\r\n        name=\"logo\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Logo\"\r\n      />\r\n      <Field\r\n        name=\"address.street\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Address - Street\"\r\n      />\r\n      <Field\r\n        name=\"address.city\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"City\"\r\n      />\r\n      <Field\r\n        name=\"address.state\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"State\"\r\n      />\r\n      <Field\r\n        name=\"address.zipcode\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Zipcode\"\r\n      />\r\n      <FieldArray name=\"metadata.media\" component={renderMedia}/>\r\n      <FieldArray name=\"booths\" component={renderBooths}/>\r\n      <div>\r\n        <button type=\"submit\" disabled={pristine || submitting}>\r\n          Submit\r\n        </button>\r\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n         Reset\r\n        </button>\r\n      </div>\r\n    </form>\r\n    \r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dashboard: state.dashboard,\r\n  initialValues : state.dashboard.initialValues\r\n});\r\nconst exhibitorForm = reduxForm({\r\n  form: 'exhibitor-form' ,\r\n  enableReinitialize:true\r\n})(ExibitorConfigForm)\r\n\r\nexport default connect(mapStateToProps)(exhibitorForm)\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadEvents,configureEvent } from \"../../redux/actions/dashboard/dashboardActions\";\r\nimport EventConfigForm from './EventConfigForm'\r\nimport ExhibitorConfigForm from './ExhibitorConfigForm'\r\ntype MyProps = {\r\n  dashboard: any;\r\n  events:any;\r\n  loadEvents: any;\r\n  configureEvent:any;\r\n  initialValues:any;\r\n};\r\n\r\ntype myState = {selectedEvent:any}\r\n\r\n\r\n\r\nclass EventConfiguration extends React.Component<MyProps, myState> {\r\n\r\nconstructor(props:any){\r\n    super(props)\r\nthis.state = {\r\n    selectedEvent :''\r\n}\r\n}\r\n  componentDidMount() {\r\n    this.props.loadEvents();\r\n  }\r\n  handleExhinitorSubmit = (values)=>{\r\n    fetch('http://localhost:4100/createEvent',{\r\n      method:'POST',\r\n      body:JSON.stringify(values),\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      }\r\n    }).then(response=>{\r\n    })\r\n  }\r\n\r\n  configureEvent = (eventId) =>{\r\n      this.props.configureEvent({eventId,events:this.props.dashboard.events})\r\n  }\r\n  onSubmit = (values)=>{\r\n    fetch('http://localhost:4100/createExhibitor',{\r\n      method:'POST',\r\n      body:JSON.stringify(values),\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      }\r\n    }).then(response=>{\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"body-inner\">\r\n                           \r\n            <div className=\"container\" style={{paddingTop:'40px'}}>\r\n              <div>\r\n                <div className=\"row\">\r\n                  {this.props.dashboard.events.length > 0 ? (\r\n                    this.props.dashboard.events.map((card) => {\r\n                      return (\r\n                        <div\r\n                          className=\"col-md-3 card\"\r\n                          key={card.eventId}\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            backgroundColor: \"white\",\r\n                            margin: \"8px\",\r\n                          }}\r\n                        >\r\n                          <h4>{card.name}</h4>\r\n                          <hr />\r\n                          <p>{card.eventId}</p><span style={{cursor:'pointer'}} onClick={()=>{this.configureEvent(card.eventId)}} ><img  src=\"https://img.icons8.com/ios/50/000000/settings.png\" />&nbsp;Configure</span>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <span />\r\n                  )}\r\n                </div>\r\n                <EventConfigForm onSubmit={this.onSubmit} initialValues={this.props.initialValues}></EventConfigForm>\r\n                {\r\n                    this.props.dashboard.exhibitors.length > 0 ? (\r\n                        this.props.dashboard.exhibitors.map((ex)=>{\r\n                           return (\r\n                               <ExhibitorConfigForm key={ex._id} onSubmit={this.onSubmit}></ExhibitorConfigForm>\r\n                           )\r\n                        })\r\n                    ): (<span/>) \r\n                }\r\n              </div>\r\n            </div>\r\n         \r\n                    \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  dashboard: state.dashboard,\r\n  initialValues : state.dashboard.initialValues\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadEvents,configureEvent })(EventConfiguration);\r\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport EventNavbar from \"../exhiTemplate/EventNavbar\";\nimport { loadAdminDashboard } from \"../../redux/actions/dashboard/dashboardActions\";\nimport { Button } from 'antd';\nimport EventConfiguration from './EventConfiguration'\n\ntype MyProps = {\n  dashboard: any;\n  loadAdminDashboard: any;\n};\nlet cards = [\n  {\n    name: \"Users\",\n    values: 123,\n  },\n  {\n    name: \"Users\",\n    values: 123,\n  },\n  {\n    name: \"Users\",\n    values: 123,\n  },\n  {\n    name: \"Users\",\n    values: 123,\n  },\n  {\n    name: \"Users\",\n    values: 123,\n  },\n  {\n    name: \"Users\",\n    values: 123,\n  },\n];\nclass AdminDashboard extends React.Component<MyProps, {}> {\n  componentDidMount() {\n    this.props.loadAdminDashboard();\n    // setInterval(()=>{\n    //   this.props.loadAdminDashboard()\n    // },3000)\n  }\n  handleClick(event){\n    alert(\"TEst\")\n  }\n  render() {\n    return (\n      <div>\n        <EventNavbar></EventNavbar>\n\n        <div className=\"body-inner\">\n          <div\n            id=\"page-banner-area\"\n            className=\"page-banner-area\"\n            style={{\n              backgroundImage: \"url(images/banner/leanr_bg.png)\",\n              minHeight: \"70px\",\n            }}\n          ></div>\n\n          <div\n            className=\"banner-item \"\n            style={{ backgroundColor: \"#110b29\", minHeight: \"720px\",position:'static' }}\n          >                      \n            <div className=\"container\" style={{paddingTop:'40px'}}>\n              <div>\n                <div className=\"row\">\n                  {this.props.dashboard.summary.length > 0 ? (\n                    this.props.dashboard.summary.map((card) => {\n                      return (\n                        <div\n                          className=\"col-md-3 card\"\n                          key={card.name}\n                          style={{\n                            textAlign: \"center\",\n                            backgroundColor: \"white\",\n                            margin: \"8px\",\n                          }}\n                        >\n                          <h4>{card.name}</h4>\n                          <hr />\n                          <p>{card.value}</p>\n                        </div>\n\n                        // <div className=\"card\" style={{ textAlign: \"center\" }}>\n                        //   {card.name}\n                        //   <div className=\"container\">\n                        //     <h4>{card.value}</h4>\n                        //   </div>\n                        // </div>\n                      );\n                    })\n                  ) : (\n                    <span />\n                  )}\n                </div>\n              </div>\n            </div>\n                      <EventConfiguration></EventConfiguration>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  dashboard: state.dashboard,\n});\n\nexport default connect(mapStateToProps, { loadAdminDashboard })(AdminDashboard);\n","import React from \"react\";\nimport { Form, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport {\n  loginAction,\n  logoutAction,\n  getMetaData,\n} from \"../../redux/actions/login/loginAction\";\nimport {Launcher} from 'react-chat-window';\ntype MyProps = {\n  handleClick: any,\n  hasOwnProperty: any,\n  isOpen: any\n};\ntype MyState = {\n  messageList: any,\n  isOpen: boolean\n};\nlet publishSocket = null;\nlet listenSocket = null;\n\nclass Event extends React.Component<MyProps, MyState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      messageList: [],\n      isOpen: true\n    }\n    listenSocket.onmessage = (event) => {\n      // When receiving a message append a div child to #messages\n      let data = JSON.parse(event.data);\n      if(data.from !== \"Adheep\") {\n        this.setState({\n          messageList: [...this.state.messageList, {\n            author: data.from,\n            type: 'text',\n            data: { text: data.msg }\n          }]\n        });\n      }\n    }\n\n    listenSocket.onclose = function(event){\n      console.log(\"Disconnected from server!\");\n      console.log(\"Re-Connected to server\");\n    }\n\n    listenSocket.onopen = function(event){\n      console.log(\"Connected to server\");\n    }\n\n  }\n\n  _onMessageWasSent(message) {\n    let d = new Date();\n      var data = {\n      from: \"Adheep\",\n      to: \"EDU123\",\n      msg: (message.type===\"text\"?message.data.text:message.data.emoji),\n      timestamp: d.getHours() +\":\"+ d.getMinutes() + \":\" + d.getSeconds()\n      };\n      // Send the msg object as a JSON-formatted string.\n      publishSocket.send(JSON.stringify(data));\n      this.setState({\n        messageList: [...this.state.messageList, message]\n      })\n  }\n\n  handleClick() {\n    if (this.props.handleClick !== undefined) {\n      this.props.handleClick();\n    } else {\n      this.setState({\n        isOpen: !this.state.isOpen,\n      });\n    }\n  }\n\n  render() {\n    const isOpen = this.props.hasOwnProperty('isOpen') ? this.props.isOpen : this.state.isOpen;\n    return (\n      <div>\n        <Launcher\n          agentProfile={{\n            teamName: 'Chat',\n            imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n          }}\n          onMessageWasSent={this._onMessageWasSent.bind(this)}\n          messageList={this.state.messageList}\n          showEmoji\n          isOpen={isOpen}\n          handleClick={this.handleClick.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  loginData: state.loginData,\n  metaData: state.metaData,\n  systemCheck: state.systemCheck,\n});\n\nconst LoginuserForm = Form.create({ name: \"Login\" })(Event);\n\nexport default connect(mapStateToProps, {\n  loginAction,\n  logoutAction,\n  getMetaData,\n})(LoginuserForm);\n","import { DefaultLayout, LoginLayout, LeftNavLayout } from \"./layouts\";\nimport MainHome from './components/exhiTemplate/Home'\nimport Login from './components/exhiTemplate/Login'\nimport Register from './components/exhiTemplate/Register'\nimport Event from './components/exhiTemplate/Event'\nimport EventWebGL from './components/exhiTemplate/EventWebGL'\nimport Dashboard from './components/dashboard/Dashboard'\nimport EventFeedback from \"./components/exhiTemplate/EventFeedback\";\nimport Feedback from \"./components/exhiTemplate/Feedback\";\nimport ResetPassword from \"./components/exhiTemplate/ResetPassword\";\nimport AdminDashboard from \"./components/dashboard/AdminDashboard\";\nimport EventChat from \"./components/exhiTemplate/EventChat\";\nimport EventConfiguration from \"./components/dashboard/EventConfiguration\"\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: LoginLayout,\n    component: MainHome\n  },\n  {\n    path: \"/login\",\n    layout: LoginLayout,\n    component: MainHome\n  },\n  {\n    path: \"/inviteLogin\",\n    layout: LoginLayout,\n    component: Login\n  },\n  {\n    path: \"/register\",\n    layout: LoginLayout,\n    component: Register\n  },\n  {\n    path: \"/reset\",\n    layout: LoginLayout,\n    component: ResetPassword\n  },\n  {\n    path: \"/event\",\n    layout: LoginLayout,\n    component: Event\n  },\n  {\n    path: \"/eventGL\",\n    layout: LoginLayout,\n    component: EventWebGL\n  },\n  {\n    path: \"/eventChat\",\n    layout: LoginLayout,\n    component: EventChat\n  },\n  {\n    path: \"/feedback\",\n    layout: LoginLayout,\n    component: EventFeedback\n  },\n  {\n    path:'/dashboard',\n    layout:LoginLayout,\n    component:Dashboard\n  },\n  {\n    path:'/admindashboard',\n    layout:LoginLayout,\n    component:AdminDashboard\n  },\n  {\n    path:'/eventConfiguration',\n    layoyt:LoginLayout,\n    component:EventConfiguration\n  }\n];\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-08082019-1\");\n\nconst withTracker = (WrappedComponent:any, options = {}) => {\n  const trackPage = (page:any) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  type MyProps = {\n    location:any\n  };\n  type MyState = {};\n\n  // eslint-disable-next-line\n  const HOC = class extends Component<MyProps,MyState> {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps:any) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import {\n  LOGIN,\n  LOGOUT,\n  OTP_VALIDATION_SUCCESS,\n  RESET_SUCCESS,\n  RESET_FAILED,\n  SET_WALLET_DETAILS,\n} from \"../../actions/types\";\nimport axios from \"axios\";\nimport { config } from \"../../../config/configs\";\n\nlet jwtDecode = require(\"jwt-decode\");\nconst initialState = {\n  Email: null,\n  isLoggedIn: false,\n  redirect: false,\n  token: null,\n};\nlet accessToken = sessionStorage.getItem(\"accessToken\");\n\nasync function getInitialState() {\n  if (accessToken !== null && accessToken !== undefined) {\n    var decoded = jwtDecode(accessToken);\n    decoded[\"profileUrl\"] = await getProfileUrl(accessToken);\n    let initialState = {\n      firstname: decoded.firstname,\n      middlename: decoded.middlename,\n      lastname: decoded.lastname,\n      username: decoded.username,\n      status: decoded.status,\n      userDetail: decoded,\n      emailId: decoded.emailId,\n      roleName: decoded.roleName,\n      Email: decoded.emailId,\n      isLoggedIn: true,\n      redirect: true,\n      token: accessToken,\n    };\n    return initialState;\n  } else {\n    return initialState;\n  }\n}\n\nconst getProfileUrl = (accessToken) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(config.apiRootPath + \"/v1/profileUrl\", {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      })\n      .then((res) => {\n        resolve(res.data.profileUrl);\n      });\n  });\n};\n\nexport default function (state = getInitialState(), action: any) {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...action.payload,\n      };\n    case LOGOUT:\n      return {\n        ...action.payload,\n      };\n    case RESET_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case RESET_FAILED:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case SET_WALLET_DETAILS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { LANGUAGE } from '../../actions/types';\n\nconst initialState = {\n    language : 'en'\n}\n\nexport default function(state = initialState, action:any) {\n    switch (action.type) {\n        case LANGUAGE:\n            return {\n                ...state,\n                language: action.payload\n            };\n\n        default:\n            return state;\n    }\n}\n","import { UPDATE_PROFILE } from \"../../actions/types\";\n\nconst initialState = {\n    updateProfile: {}\n  };\n\n  export default function(state = initialState, action:any) {\n    switch (action.type) {\n      case UPDATE_PROFILE:\n        return {\n          ...state,\n          updateProfile: action.payload\n        };\n      default:\n          return state;\n    }\n  \n  }","import { CHANGE_PASSWORD } from \"../../actions/types\";\n\nconst initialState = {\n    passwordUpdate: {}\n  };\n\n  export default function(state = initialState, action:any) {\n    switch (action.type) {\n      case CHANGE_PASSWORD:\n        return {\n          ...state,\n          passwordUpdate: action.payload\n        };\n      default:\n          return state;\n    }\n  \n  }","import { LOGIN, LOGOUT, META_DATA, SYSCHECK_FAILED, SYSCHECK_PASSED, RESET_EVENT } from '../../actions/types';\n\nconst initialState = {\n    Email: null,\n    isLoggedIn: false,\n    redirect: false,\n    token: null,\n    isValidated: false,\n    systemData: {\n      mobile: false\n    }\n}\n\nexport default function(state = initialState, action:any) {\n    switch (action.type) {\n        case META_DATA:\n            return {\n                ...action.payload\n            };\n        case SYSCHECK_PASSED:\n            return {\n              isValidated: true,\n              ...action.payload\n            }\n        case SYSCHECK_FAILED:\n            return {\n              isValidated: false\n            }\n        case RESET_EVENT:\n          return {\n            ...state,\n            isValidated: false\n          }\n        case LOGOUT:\n          return {\n            ...initialState\n          };\n        default:\n            return state;\n    }\n}\n","import {\n    REGISTER_USER,\n    REGISTRATION_SUCCESS,\n    REGISTRATION_FAILED,\n    OTP_VALIDATION_FAILURE,\n    OTP_VALIDATION_SUCCESS,\n  } from \"../../actions/types\";\n  \n  const initialState = {\n    isRegistered: false,\n    registrationErrorMessage: \"\",\n    otpValidated: false,\n    otpSessionId:'',\n    otpValidationMessage: '',\n  };\n  \n  export default function (state = initialState, action: any) {\n    switch (action.type) {\n      case REGISTER_USER:\n        return {\n          ...action.payload,\n        };\n      case REGISTRATION_SUCCESS:\n        return {\n          ...action.payload,\n          registrationErrorMessage: \"\",\n        };\n      case REGISTRATION_FAILED: {\n        return {\n          ...action.payload,\n          isRegistered: false,\n          registrationErrorMessage: action.payload.message.userMessage,\n        };\n      }\n      case OTP_VALIDATION_SUCCESS: {\n        return { ...action.payload };\n      }\n      case OTP_VALIDATION_FAILURE: {\n        return {\n            ...state,\n          ...action.payload,\n          otpValidated: false,\n          registrationErrorMessage: \"\",\n          isRegistered: true,\n          otpValidationMessage: action.payload.message.userMessage,\n        };\n      }\n      default:\n        return state;\n    }\n  }","import { LOGIN, LOGOUT, META_DATA, SYSCHECK_FAILED, SYSCHECK_PASSED, SYSCHECK_INIT, WEBGL_LOGOUT, RESET_EVENT, SYSCHECK_CHAT } from '../../actions/types';\n\nconst initialState = {\n    systemCheck: false,\n    isValidated: false,\n    webglLogout: false\n}\n\nexport default function(state = initialState, action:any) {\n    switch (action.type) {\n        case SYSCHECK_INIT:\n          return {\n            ...state,\n            systemCheck: action.payload['systemCheck']\n          }\n        case WEBGL_LOGOUT:\n          return {\n            ...state,\n            webglLogout: action.payload['webglLogout']\n          }\n        case SYSCHECK_PASSED:\n            return {\n              isValidated: true\n            }\n        case SYSCHECK_FAILED:\n            return {\n              isValidated: false\n            }\n        case SYSCHECK_CHAT:\n            return {\n              ...state,\n              ...action.payload,\n              chatUrl: 'wss://api.techfully.io/'\n            }\n        case RESET_EVENT:\n          return {\n            ...state,\n            webglLogout: false\n          }\n        case LOGOUT:\n          return {\n            ...initialState\n          };\n        default:\n            return state;\n    }\n}\n","import { LOAD_DASHBOARD,LOAD_EVENTS,CONFIGURE_EVENT } from \"../../actions/types\";\n\nconst initialState = {\n    summary:[],\n    events:[],\n    exhibitors:[],\n    initialValues:{}\n  };\n\nexport default function (state = initialState, action: any) {\n    switch (action.type) {\n      case LOAD_DASHBOARD:\n        return {\n          ...state,summary:[...action.payload],\n        };\n      case LOAD_EVENTS:{\n        return {\n          ...state,events:action.payload\n        };\n      }\n      case CONFIGURE_EVENT :{\n       return  {...state,initialValues:action.payload.event,exhibitors:action.payload.exhibitors}\n      }\n        \n      default:\n        return state;\n    }\n  }","import { RESET_VALUES, RESET_SUCCESS, RESET_FAILED, OTP_RESET_SUCCESS, OTP_RESET_FAILED } from \"../../actions/types\";\nimport { FastField } from \"formik\";\n\nconst initialState = {\n  isResetPassword: false,\n  otpValidated: false,\n  otpSessionId: \"\",\n  otpErrorMessage: \"\",\n  resetErrorMessage: \"\"\n};\n\nexport default function (state = initialState, action: any) {\n  switch (action.type) {\n    case RESET_SUCCESS:\n      return {\n        ...state,\n        ...action.payload\n      }\n    case RESET_FAILED:\n      return {\n        ...state,\n        ...action.payload\n      }\n    case OTP_RESET_SUCCESS:\n      return {\n        ...state,\n        ...action.payload\n      }\n    case OTP_RESET_FAILED:\n      return {\n        ...state,\n        ...action.payload\n      }\n    case RESET_VALUES:\n      return {\n        isResetPassword: false,\n        otpValidated: false,\n        otpSessionId: \"\",\n        otpErrorMessage: \"\",\n        resetErrorMessage: \"\"\n      }\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\nimport loginReducer from '../reducers/login/loginReducer';\nimport languageReducer from \"../reducers/language/languageReducer\";\nimport userProfileReducer from \"../reducers/profileUpdateReducer/profileUpdateReducer\";\nimport changePasswordReducer from \"../reducers/changePasswordReducer/changePasswordReducer\";\nimport metaDataReducer from \"./metadata/metadataReducer\"\nimport registerReducer from '../reducers/register/registerReducer'\nimport systemCheckReducer from './metadata/systemCheckReducer';\nimport dashboardReducer from '../reducers/dashboard/dashboardReducer'\nimport resetReducer from '../reducers/login/resetReducer'\nimport { reducer as reduxFormReducer } from 'redux-form'\n\n\nexport default combineReducers({\n    languageDatum : languageReducer,\n    loginData: loginReducer,\n    userProfile: userProfileReducer,\n    changePassword: changePasswordReducer,\n    metaData: metaDataReducer,\n    registration:registerReducer,\n    systemCheck: systemCheckReducer,\n    dashboard:dashboardReducer,\n    resetStatus: resetReducer,\n    form: reduxFormReducer\n});\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux/reducers';\n\nconst initialState = {};\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst middleware = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(...middleware),\n  // other store enhancers if any\n);\n\n\nconst store = createStore(rootReducer, initialState, enhancer);\n\nexport default store;\n","import React from \"react\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport './App.css'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport {config} from './config/configs'\nexport default() => (\n    <Provider store={store}>\n        <Router basename={config.appBaseName || \"\"}>\n            <div>\n                {routes.map((route, index) => {\n                    return (\n                        <Route\n                            key={index}\n                            path={route.path}\n                            exact={route.exact}\n                            component={withTracker((props:any) => {\n                            return (\n                                <route.layout {...props}>\n                                    <route.component {...props}/>\n                                </route.layout>\n                            );\n                        })}/>\n                    );\n                })}\n            </div>\n        </Router>\n    </Provider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config:any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // console.log(\n          //   'This web app is being served cache-first by a service ' +\n          //     'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          // );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl:any, config:any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // console.log(\n              //   'New content is available and will be used when all ' +\n              //     'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              // );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      // console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl:any, config:any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // console.log(\n      //   'No internet connection found. App is running in offline mode.'\n      // );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}